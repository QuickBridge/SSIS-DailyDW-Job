<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/22/2015 2:45:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="QBFSYSMS"
  DTS:CreatorName="QUICKBRIDGE\mstuewe"
  DTS:DTSID="{01247F41-FE8F-48F2-93AA-E5B42B73511D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProcessExpediaFlatFilesCSV"
  DTS:PackageType="5"
  DTS:VersionBuild="192"
  DTS:VersionGUID="{1A722463-DBCF-409A-AB90-0936509F5F39}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV Flat File Source]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{B05C5CA3-9921-40B5-BB84-F015A5F31AA6}"
      DTS:ObjectName="CSV Flat File Source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\QBFSYSMS\SSISTesting\Experian\20150731Main.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry ID"
              DTS:DTSID="{7CD5F2D5-977A-46B3-AC77-2C83921DCF2D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry First Name"
              DTS:DTSID="{C3F9D3EE-8B48-4CF1-98F9-B15E9CBA8403}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry Middle Name"
              DTS:DTSID="{A7F3E78E-49FD-4A78-94D6-719C60C94380}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry Last Name"
              DTS:DTSID="{8EAB8512-9D27-497A-BEF4-4716EC081D03}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry Street Address"
              DTS:DTSID="{045C83D7-7F0F-46FB-9769-D632618BDD5F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry Generation"
              DTS:DTSID="{675240C7-0F59-4F31-BD84-ABA0F7FF60C9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry City"
              DTS:DTSID="{7AA1E644-861A-4C57-A28B-62AD7CE2E049}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry State"
              DTS:DTSID="{AF0C7D11-3814-4347-9B80-D93008187787}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry Zip Code"
              DTS:DTSID="{4F41976D-E643-4DC0-8337-778A1B86A11A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry SSN"
              DTS:DTSID="{D024861D-E348-42D1-A0F9-BD51DCD23CA4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Inquiry Ref"
              DTS:DTSID="{953E2203-C8CE-45C4-BBFF-0D4868896E17}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Consumer Statements"
              DTS:DTSID="{E3B907CF-B2A1-4C98-B828-35888292C25B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 12"
              DTS:DTSID="{E725954E-15AD-4341-9DBE-53475156CCD3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 13"
              DTS:DTSID="{621E8735-5627-4CE0-A2FB-288F9A0C3E1B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FCRA Attributes"
              DTS:DTSID="{EC3895B4-D880-4098-9B7D-2C0D8FE229E0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 15"
              DTS:DTSID="{0A1057C4-E883-41C6-99CD-779A557E258B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FICO Score 2"
              DTS:DTSID="{B3BC225C-CAAC-47DF-B0E2-A96B0EC271A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 17"
              DTS:DTSID="{F044B091-6A73-48AC-8399-4E86CA0334EE}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ErrorLog]"
      DTS:CreationName="FILE"
      DTS:DTSID="{A618CD57-3B15-45C2-8DBD-73DFED0CAA09}"
      DTS:ObjectName="ErrorLog">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExperianFilePath]  + "_Error.txt"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="\\QBFSYSMS\SSISTesting\Experian\_Error.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Archive]"
      DTS:CreationName="FILE"
      DTS:DTSID="{77430FAB-D52E-4006-AC72-DEA9024B725F}"
      DTS:ObjectName="Flat File Archive">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ArchiveFolder]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="3"
          DTS:ConnectionString="\\QBFSYSMS\SSISTesting\Experian\Archive" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="ErrorLog"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{1E6C4F27-AB68-49CB-8364-71754993E38E}"
      DTS:ObjectName="SSIS log provider for Text files2">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="List of emails to send messages to when SSNs are missing."
      DTS:DTSID="{F6C03DDA-1888-4212-B7B6-DF4C2C06270C}"
      DTS:ObjectName="EmailToExpediaMissingSSNs">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">mstuewe@quickbridgefunding.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C4F2FFBC-5BE2-4777-AA81-F2F000CF93FD}"
      DTS:ObjectName="ExcelFileExtension">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Main.csv</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{640FF453-A459-4755-A801-C13D6AF1548F}"
      DTS:ObjectName="SourceExperianFicoScores">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Experian\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{39B8A69E-6969-4CF3-961D-D32853288D0C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ExperianFilePath] + &quot;Archive&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\QBFSYSMS\SSISTesting\Experian\Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4084EBA0-A985-4B52-9083-3CB9AC1B7258}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8">\\QBFSYSMS\SSISTesting\Experian\20150731Main.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BE664300-1DAB-4AFF-9251-B19C16BA264B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_DATE) (SUBSTRING(@[User::CurrentFileDateString],1,4) + &quot;-&quot; +&#xA;SUBSTRING(@[User::CurrentFileDateString],5,2) + &quot;-&quot; + &#xA;SUBSTRING(@[User::CurrentFileDateString],7,2))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFileDate">
      <DTS:VariableValue
        DTS:DataType="7">7/31/2015</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4BDB4E26-494F-44DF-95B5-8460E2D288A8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(  REPLACE( @[User::CurrentFile]  , @[User::ExperianFilePath]  , &quot;&quot; ),@[$Package::ExcelFileExtension],&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFileDateString">
      <DTS:VariableValue
        DTS:DataType="8">20150731</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2C5540D9-FD70-46CC-A6EB-8ED645430333}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatched">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8965D5FB-E29D-4C70-8523-2D3194077FF0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatchedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{351818AF-4A0A-46AF-B05D-BAA02042271A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatchedMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{202675C4-0723-43DB-8FE9-B3E5C331533C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::DealSSNNotMatchedCount] + &quot; rows were not able to match an existing owner.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DealSSNNotMatchedPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to match an existing owner.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{955DDD71-5EDE-435F-9CF6-77384A948EA0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FailedDataConversionPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot; + @[User::MissingSSNPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot; +  @[User::DealSSNNotMatchedPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot; +  @[User::MultipleOwnerSameSSNPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailPreMessageDataIssues">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows could not convert data to correct data type.&lt;br&gt;&lt;br&gt;&gt;&gt;  0 rows have missing SSN.&lt;br&gt;&lt;br&gt;&gt;&gt;  0 rows were not able to match an existing owner.&lt;br&gt;&lt;br&gt;&gt;&gt;  0 rows have multiple owners with same SSN and DealId.&lt;br&gt;&lt;br&gt;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C0DD177-564E-4520-95E0-037AF0E804FA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FailedInsertPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot; +  @[User::FailedLookupPreMessage] + &quot;&lt;br&gt;&lt;br&gt;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailPreMessageError">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to be inserted into the ExperianMigration table.&lt;br&gt;&lt;br&gt;&gt;&gt;  0 rows were not able to do a lookup.&lt;br&gt;&lt;br&gt;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0103841-C06F-4703-B802-14CA53CE79AB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::EmailSubjectPrefix] +&#xA;&quot;Monthly Experian FICO Score Excel File Load for &quot; +  @[User::CurrentFileDateString] + &quot;. &quot; +&#xA;(DT_WSTR,5)(@[User::MissingSSNCount] + @[User::DealSSNNotMatchedCount] + @[User::MultipleOwnerSameSSNCount] )  +&quot; row(s) with Data Issues.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSubjectDataIssues">
      <DTS:VariableValue
        DTS:DataType="8">SSIS Daily Package Msg: Monthly Experian FICO Score Excel File Load for 20150731. 0 row(s) with Data Issues.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{53137D63-5592-4BDC-9278-1F275643BB8A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::EmailSubjectPrefix] +&#xA;&quot;Experian FICO Scores could not be loadded. Trade Date: &quot; +  @[User::CurrentFileDateString]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSubjectError">
      <DTS:VariableValue
        DTS:DataType="8">SSIS Daily Package Msg: Experian FICO Scores could not be loadded. Trade Date: 20150731</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B09AC68A-3295-4385-95CE-F352A81272B2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ConnectionString_Risk_FlatFiles] +  @[$Package::SourceExperianFicoScores]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExperianFilePath">
      <DTS:VariableValue
        DTS:DataType="8">\\QBFSYSMS\SSISTesting\Experian\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C79A3C1-DD82-494B-A78A-B268D3F5B968}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedDataConversion">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E70A9C8B-7D3E-4282-9CC1-EDE7DDFC3274}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedDataConversionCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BAB3EDCB-1B46-44FE-82FD-C703C50D5BD4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedDataConversionMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1F12CF96-13FF-4048-BD16-38E483873664}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::FailedDataConversionCount] + &quot; rows could not convert data to correct data type.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedDataConversionPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows could not convert data to correct data type.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC7FDF25-56EA-42AD-A0E1-2EE0329ACE2A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInsertCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4126E039-B3ED-4313-9268-3EC964136FC6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInsertMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5687ADB7-A9D9-4657-B790-3303098F41C0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::FailedInsertCount] + &quot; rows were not able to be inserted into the ExperianMigration table.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInsertPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to be inserted into the ExperianMigration table.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78DB8459-B8A9-461E-9BA7-33B50C16A048}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedInserts">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{679CA296-7064-48BE-9544-68147097E556}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookup">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A198446-44C8-46D2-9116-4C696CFDA01F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookupCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{928E4D41-24D0-4A03-9254-23C4FA1C54C5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookupMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8722939B-A858-4A02-A4C2-63A7F6629F25}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::FailedLookupCount] + &quot; rows were not able to do a lookup.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FailedLookupPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows were not able to do a lookup.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F1A46856-332F-4A1C-A58E-2A891D157232}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9A0833DE-6A09-4A70-84E3-E846C273A998}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC293421-89F1-4AEB-850F-5A5E9C8C356D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::MissingSSNCount] + &quot; rows have missing SSN.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows have missing SSN.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B8CFFB4B-867E-4412-BCE5-E3795756E76E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MissingSSNs">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2ECB3B24-2517-49ED-9B7A-31511A394751}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSN">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5302AB62-962A-4FE0-B3AC-E15FC134E254}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSNCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B0B4D67-30FD-4646-BDCB-25FD3C81B311}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSNMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C02E508-CB79-4F45-9558-44F700BE5093}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&gt;&gt;  &quot; + (DT_WSTR,7)@[User::MultipleOwnerSameSSNCount] + &quot; rows have multiple owners with same SSN and DealId.&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MultipleOwnerSameSSNPreMessage">
      <DTS:VariableValue
        DTS:DataType="8">&gt;&gt;  0 rows have multiple owners with same SSN and DealId.</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{1E6C4F27-AB68-49CB-8364-71754993E38E}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Archive Folder"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{069C6E2D-4163-4082-80A3-DFFD24D0959C}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Archive Folder"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="CreateDirectory"
          TaskOverwriteDestFile="True"
          TaskSourcePath="{77430FAB-D52E-4006-AC72-DEA9024B725F}"
          TaskDestinationPath="{77430FAB-D52E-4006-AC72-DEA9024B725F}" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{5F7D3FB7-2464-4682-9AFF-720B65EAA908}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{A17B76EC-6BE3-4BA5-811C-E4847BFBB432}"
        DTS:ObjectName="{A17B76EC-6BE3-4BA5-811C-E4847BFBB432}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::ExperianFilePath]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">"*" +  @[$Package::ExcelFileExtension]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="\\QBFSYSMS\SSISTesting\Experian\" />
            <FEFEProperty
              FileSpec="*Main.csv" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Failed Data Conversion Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{b9888566-24ac-442a-b6f1-c60cbc06fc98}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Failed Data Conversion Message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_33c4c08b94eb4baf9f971f577073ba9b"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::FailedDataConversion,User::FailedDataConversionCount"
              ReadWriteVariables="User::FailedDataConversionMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::FailedDataConversionCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::FailedDataConversion"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::FailedDataConversionCount"].Value.ToString() + " record(s) could not do a data conversion.<p>" + strMsg;
                /// MessageBox.Show(strMsg);
                Dts.Variables["User::FailedDataConversionMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_33c4c08b94eb4baf9f971f577073ba9b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_33c4c08b94eb4baf9f971f577073ba9b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace><AssemblyName>ST_33c4c08b94eb4baf9f971f577073ba9b</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_33c4c08b94eb4baf9f971f577073ba9b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD7J9FUAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAA7jQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQ0AABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9BQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
NAAAAAAAAEgAAAACAAUAMCQAAGQQAAABAAAAAAAAAHgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABaAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPigCAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcrMAAHATBBYTBQYHAigWAAAKbxcA
AApywwAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOE8BAAARCW8gAAAKdCQAAAETBhEG
DREEcvkAAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRyAwEA
cAhvIwAACnINAQBwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRyGQEA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApyJQEAcCgrAAAKLDkRBHIDAQBwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yNwEA
cCguAAAKcg0BAHAoJAAAChMEKyQRBHIDAQBwCQhvJwAACm8oAAAKbywAAApyDQEAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEJbyUAAAo6pf7//94VEQl1KAAAARMP
EQ8sBxEPbyYAAArcEQRyTQEAcCghAAAKEwRyXwEAcAIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAK
bywAAApyfQEAcBEEKCQAAAoTBAIoFgAACm8XAAAKctkBAHBvGAAAChEEby8AAAoCKBYAAAoWbxoA
AAoqAABBTAAAAgAAAK8AAAA3AAAA5gAAABUAAAAAAAAAAgAAABYBAACjAAAAuQEAABUAAAAAAAAA
AgAAAHoAAABiAQAA3AEAABUAAAAAAAAAHgIoMAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAoAQAACN+AAAMBQAATAcAACNTdHJpbmdzAAAAAFgMAAAg
AgAAI1VTAHgOAAAQAAAAI0dVSUQAAACIDgAA3AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMAAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAA
AAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4B
BgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9
A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBKBHACCgB2BGAECgCPBGAE
BgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgB1BboAFgCoBZYFFgC5BYoFFgDIBYoFFgDj
BYoFBgARBv4FFgA3BooFBgA/BroAFgBNBooFFgBuBooFBgCRBroABgC5BnACBgDiBroABgDqBroA
AAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAAD
AQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMY
vAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggG
Aj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAaAhsAAgBwIwAAAACGGLwB
GwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFY
AHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARiAKEAUwRpACkAvAFuALkA
vAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkAawWdANkAewVdAPkAvAEb
AAEBvAEbAPkAwwWhAAEB2gWpABEBHQavABkBKwadACkBRga1AAEBYga7ADkBeQbBACkBRgbFABkB
iAbNAEEBnQYbADkBpQbRACEBYgXVAAkAsQbaAEkBxAbBACkBzQbfAAkA2QbBAFEB8wblAFkB2Qbs
AOkA/gbxABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCVAS4AIwCVAS4AYwC7AS4ACwAkAS4A
EwBsAS4AMwBsAS4AKwCVAS4AOwCbAS4AQwCVAS4AWwCyAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBT
AHUA9gACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASA
AAABAAAAZRbfdgAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAA
AAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKAAIFAAAAAAQAAAAAAAAAAAAAAAEA
igUAAAAAAAAAAAEAAAAIBwAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMzNjNGMwOGI5NGViNGJhZjlm
OTcxZjU3NzA3M2JhOWIuZGxsAFJlc291cmNlcwBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNk
NTI5NWI1NC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMTYzN2U0MGI4NWZiNGRj
ODhjM2I3MzUzZDUyOTViNTQAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5
c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2
YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfMzNjNGMwOGI5NGViNGJhZjlmOTcxZjU3
NzA3M2JhOWIAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
VHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNz
ZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAElu
dDMyAHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURiAE9sZURiRGF0
YUFkYXB0ZXIARGF0YVRhYmxlAEZpbGwARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJu
YWxEYXRhQ29sbGVjdGlvbkJhc2UAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVu
dW1lcmF0b3IAZ2V0X0N1cnJlbnQARGF0YVJvdwBTdHJpbmcAQ29uY2F0AERhdGFDb2x1bW5Db2xs
ZWN0aW9uAGdldF9Db2x1bW5zAERhdGFDb2x1bW4AZ2V0X0NvbHVtbk5hbWUATW92ZU5leHQASURp
c3Bvc2FibGUARGlzcG9zZQBnZXRfT3JkaW5hbABHZXRUeXBlAE1lbWJlckluZm8AZ2V0X05hbWUA
b3BfRXF1YWxpdHkAVG9TdHJpbmcAQ29udmVydABEYXRlVGltZQBUb0RhdGVUaW1lAHNldF9WYWx1
ZQBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMAAABxUwBUAF8AMQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMA
MwBiADcAMwA1ADMAZAA1ADIAOQA1AGIANQA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAA/VQBzAGUAcgA6ADoARgBhAGkAbABlAGQARABhAHQAYQBDAG8AbgB2AGUA
cgBzAGkAbwBuAEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AADVVAHMAZQByADoAOgBGAGEAaQBs
AGUAZABEAGEAdABhAEMAbwBuAHYAZQByAHMAaQBvAG4AAAk8AHQAcgA+AAAJPAB0AGQAPgAACzwA
LwB0AGQAPgAACzwALwB0AHIAPgAAEUQAYQB0AGUAVABpAG0AZQAAFU0ATQAvAGQAZAAvAHkAeQB5
AHkAABE8AC8AdABhAGIAbABlAD4AAB1UAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAAFsgAHIA
ZQBjAG8AcgBkACgAcwApACAAYwBvAHUAbABkACAAbgBvAHQAIABkAG8AIABhACAAZABhAHQAYQAg
AGMAbwBuAHYAZQByAHMAaQBvAG4ALgA8AHAAPgAAQ1UAcwBlAHIAOgA6AEYAYQBpAGwAZQBkAEQA
YQB0AGEAQwBvAG4AdgBlAHIAcwBpAG8AbgBNAGUAcwBzAGEAZwBlAAAAAADX2GTgnI+xTpZ8fV/l
ItktAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQI
ABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkG
IAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwHIAIIEoCB
HAUgABKAhQUgABKAjQUAAg4ODgUgABKAmQMgAA4HAAQODg4ODgMgAAIDIAAIBCABHAgEIAASUQUA
AgIODgYAARGArQ4EIAEODgQgAQEcLQcQEn0SgIESgJ0SgJEOCBKAkRKAnRKAnRKAjRKAjRKAoRKA
jRGArRKAoRKAoUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNk
NTI5NWI1NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE1AAAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBAAC8NAAAAAAAAAAAAADeNAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA0DQAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDfdmUWAAABAN92ZRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADMA
LgAzADAANAAzADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMwAz
AGMANABjADAAOABiADkANABlAGIANABiAGEAZgA5AGYAOQA3ADEAZgA1ADcANwAwADcAMwBiAGEA
OQBiAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AMwAzAGMANABjADAAOABiADkANABlAGIANABiAGEAZgA5AGYAOQA3
ADEAZgA1ADcANwAwADcAMwBiAGEAOQBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMwAuADMAMAA0ADMAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMwAuADMAMAA0ADMAMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADwNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Failed Insert Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{E8CD50FC-0C05-4D86-A3AE-05BB157C9B09}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Failed Insert Email Message"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_61f4c4de2b9440909650bee1fd680517"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::FailedInsertCount,User::FailedInserts"
              ReadWriteVariables="User::FailedInsertMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::FailedInsertCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::FailedInserts"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }

                    /// Don't return more than 10 rows.
                    icounter++;
                    if (icounter >= 10)
                    {
                        strMsg = strMsg + "<tr colspan=" + col.Ordinal + "><td>...</td></tr>";
                        break;
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::FailedInsertCount"].Value.ToString() + " record(s) were unable to be inserted into the ExperianMigration table. Possible duplicate records. The file was still archived to prevent reprocessing.<p>" + strMsg;
                ///MessageBox.Show(strMsg);
                Dts.Variables["User::FailedInsertMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_61f4c4de2b9440909650bee1fd680517.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace><AssemblyName>ST_61f4c4de2b9440909650bee1fd680517</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_61f4c4de2b9440909650bee1fd680517.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_61f4c4de2b9440909650bee1fd680517.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADbG9FUAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAALjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQ1AABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NgAAAAAAAEgAAAACAAUAeCQAAFwRAAABAAAAAAAAAMAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBACgAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPm4CAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcqMAAHATBBYTBQYHAigWAAAKbxcA
AApyswAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOJUBAAARCW8gAAAKdCQAAAETBhEG
DREEctsAAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy5QAA
cAhvIwAACnLvAABwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRy+wAA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApyBwEAcCgrAAAKLDkRBHLlAABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yGQEA
cCguAAAKcu8AAHAoJAAAChMEKyQRBHLlAABwCQhvJwAACm8oAAAKbywAAApy7wAAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEFF1gTBREFHwoyOhqNAQAAARMPEQ8W
EQSiEQ8Xci8BAHCiEQ8YCG8nAAAKjB4AAAGiEQ8ZckkBAHCiEQ8oLwAAChMEKwwRCW8lAAAKOl/+
///eFREJdSgAAAETEBEQLAcREG8mAAAK3BEEcm8BAHAoIQAAChMEcoEBAHACKBYAAApvFwAACnJz
AABwbxgAAApvGQAACm8sAAAKcp8BAHARBCgkAAAKEwQCKBYAAApvFwAACnLYAgBwbxgAAAoRBG8w
AAAKAigWAAAKFm8aAAAKKkFMAAACAAAArwAAADcAAADmAAAAFQAAAAAAAAACAAAAFgEAAKMAAAC5
AQAAFQAAAAAAAAACAAAAegAAAKgBAAAiAgAAFQAAAAAAAAAeAigxAAAKKgAAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAApAQAACN+AAAQBQAATAcAACNT
dHJpbmdzAAAAAFwMAAAMAwAAI1VTAGgPAAAQAAAAI0dVSUQAAAB4DwAA5AEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMQAAAAIAAAAPAAAA
AgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9
ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnAC
BgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBK
BHACCgB2BGAECgCPBGAEBgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgB1BboAFgCoBZYF
FgC5BYoFFgDIBYoFFgDjBYoFBgARBv4FFgA3BooFBgA/BroAFgBNBooFFgBuBooFBgCRBroABgC5
BnACBgDiBroABgDqBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUA
AQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJK
AFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI
4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAa
AhsAAgC0IwAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEA
vAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARi
AKEAUwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkA
awWdANkAewVdAPkAvAEbAAEBvAEbAPkAwwWhAAEB2gWpABEBHQavABkBKwadACkBRga1AAEBYga7
ADkBeQbBACkBRgbFABkBiAbNAEEBnQYbADkBpQbRACEBYgXVAAkAsQbaAEkBxAbBACkBzQbfAAkA
2QbBAFEB8wblAFkB2QbsACkBRgbxAOkA/gb3ABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCd
AS4AIwCdAS4AYwDDAS4ACwAsAS4AEwB0AS4AMwB0AS4AKwCdAS4AOwCjAS4AQwCdAS4AWwC6AUMA
awBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA/AACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgAD
AAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAZRZbdQAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEA
AAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAK
AAIFAAAAAAQAAAAAAAAAAAAAAAEAigUAAAAAAAAAAAEAAAAIBwAABQAEAAAAADxNb2R1bGU+AFNU
XzYxZjRjNGRlMmI5NDQwOTA5NjUwYmVlMWZkNjgwNTE3LmRsbABSZXNvdXJjZXMAU1RfMTYzN2U0
MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWlu
AFNUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0AFNjcmlwdFJlc3VsdHMAbXNjb3Js
aWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzYxZjRj
NGRlMmI5NDQwOTA5NjUwYmVlMWZkNjgwNTE3AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBJbnQzMgBzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0u
RGF0YS5PbGVEYgBPbGVEYkRhdGFBZGFwdGVyAERhdGFUYWJsZQBGaWxsAERhdGFSb3dDb2xsZWN0
aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAFN5c3RlbS5Db2xsZWN0aW9u
cwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cAU3RyaW5nAENv
bmNhdABEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBEYXRhQ29sdW1uAGdldF9Db2x1
bW5OYW1lAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAZ2V0X09yZGluYWwAR2V0VHlwZQBN
ZW1iZXJJbmZvAGdldF9OYW1lAG9wX0VxdWFsaXR5AFRvU3RyaW5nAENvbnZlcnQARGF0ZVRpbWUA
VG9EYXRlVGltZQBzZXRfVmFsdWUAU1RfMTYzN2U0MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADEANgAzADcAZQA0ADAAYgA4
ADUAZgBiADQAZABjADgAOABjADMAYgA3ADMANQAzAGQANQAyADkANQBiADUANAAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAL1UAcwBlAHIAOgA6AEYAYQBpAGwAZQBk
AEkAbgBzAGUAcgB0AEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AACdVAHMAZQByADoAOgBGAGEA
aQBsAGUAZABJAG4AcwBlAHIAdABzAAAJPAB0AHIAPgAACTwAdABkAD4AAAs8AC8AdABkAD4AAAs8
AC8AdAByAD4AABFEAGEAdABlAFQAaQBtAGUAABVNAE0ALwBkAGQALwB5AHkAeQB5AAAZPAB0AHIA
IABjAG8AbABzAHAAYQBuAD0AACU+ADwAdABkAD4ALgAuAC4APAAvAHQAZAA+ADwALwB0AHIAPgAA
ETwALwB0AGEAYgBsAGUAPgAAHVQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIAAAgTcgAHIAZQBj
AG8AcgBkACgAcwApACAAdwBlAHIAZQAgAHUAbgBhAGIAbABlACAAdABvACAAYgBlACAAaQBuAHMA
ZQByAHQAZQBkACAAaQBuAHQAbwAgAHQAaABlACAARQB4AHAAZQByAGkAYQBuAE0AaQBnAHIAYQB0
AGkAbwBuACAAdABhAGIAbABlAC4AIABQAG8AcwBzAGkAYgBsAGUAIABkAHUAcABsAGkAYwBhAHQA
ZQAgAHIAZQBjAG8AcgBkAHMALgAgAFQAaABlACAAZgBpAGwAZQAgAHcAYQBzACAAcwB0AGkAbABs
ACAAYQByAGMAaABpAHYAZQBkACAAdABvACAAcAByAGUAdgBlAG4AdAAgAHIAZQBwAHIAbwBjAGUA
cwBzAGkAbgBnAC4APABwAD4AADNVAHMAZQByADoAOgBGAGEAaQBsAGUAZABJAG4AcwBlAHIAdABN
AGUAcwBzAGEAZwBlAABMSaiW/gqCTaC0vMOqy/w5AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZ
AyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAE
AQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAAB
BCAAEm0EIAAScQUgARJ1HAMgABwHIAIIEoCBHAUgABKAhQUgABKAjQUAAg4ODgUgABKAmQMgAA4H
AAQODg4ODgMgAAIDIAAIBCABHAgEIAASUQUAAgIODgYAARGArQ4EIAEODgUAAQ4dHAQgAQEcLwcR
En0SgIESgJ0SgJEOCBKAkRKAnRKAnRKAjRKAjRKAoRKAjRGArRKAoR0cEoChRwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0AAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
APw1AAAAAAAAAAAAAB42AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQNgAAAAAAAAAAAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAFt1ZRYAAAEAW3VlFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAx
ADYAMwA3AGUANAAwAGIAOAA1AGYAYgA0AGQAYwA4ADgAYwAzAGIANwAzADUAMwBkADUAMgA5ADUA
YgA1ADQAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA3ADMAMwAu
ADMAMAAwADQAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2ADEA
ZgA0AGMANABkAGUAMgBiADkANAA0ADAAOQAwADkANgA1ADAAYgBlAGUAMQBmAGQANgA4ADAANQAx
ADcALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANQAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwA2ADEAZgA0AGMANABkAGUAMgBiADkANAA0ADAAOQAwADkANgA1ADAA
YgBlAGUAMQBmAGQANgA4ADAANQAxADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AMQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcA
MwA1ADMAZAA1ADIAOQA1AGIANQA0AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA1ADcAMwAzAC4AMwAwADAANAAzAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcAMwAzAC4AMwAwADAANAAzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Failed Lookup Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{967389D2-620F-4D9A-8E41-B261A1351005}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Failed Lookup Email Message"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_c63496bb1f554cc3bc84af7bfeacd98a"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::FailedLookup,User::FailedLookupCount"
              ReadWriteVariables="User::FailedLookupMessage">
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::FailedLookupCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::FailedLookup"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }

                    /// Don't return more than 10 rows.
                    icounter++;
                    if (icounter >= 10)
                    {
                        strMsg = strMsg + "<tr colspan=" + col.Ordinal + "><td>...</td></tr>";
                        break;
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::FailedLookupCount"].Value.ToString() + " record(s) could not perform a lookup. Possible duplicate records. The file was still archived to prevent reprocessing.<p>" + strMsg;
                ///MessageBox.Show(strMsg);
                Dts.Variables["User::FailedLookupMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ST_c63496bb1f554cc3bc84af7bfeacd98a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace><AssemblyName>ST_c63496bb1f554cc3bc84af7bfeacd98a</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c63496bb1f554cc3bc84af7bfeacd98a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_c63496bb1f554cc3bc84af7bfeacd98a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPwG81UAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAA3jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA1AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
NQAAAAAAAEgAAAACAAUAeCQAABgRAAABAAAAAAAAAMAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBACgAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPm4CAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcqMAAHATBBYTBQYHAigWAAAKbxcA
AApyswAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOJUBAAARCW8gAAAKdCQAAAETBhEG
DREEctkAAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy4wAA
cAhvIwAACnLtAABwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRy+QAA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApyBQEAcCgrAAAKLDkRBHLjAABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yFwEA
cCguAAAKcu0AAHAoJAAAChMEKyQRBHLjAABwCQhvJwAACm8oAAAKbywAAApy7QAAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEFF1gTBREFHwoyOhqNAQAAARMPEQ8W
EQSiEQ8Xci0BAHCiEQ8YCG8nAAAKjB4AAAGiEQ8ZckcBAHCiEQ8oLwAAChMEKwwRCW8lAAAKOl/+
///eFREJdSgAAAETEBEQLAcREG8mAAAK3BEEcm0BAHAoIQAAChMEcn8BAHACKBYAAApvFwAACnJz
AABwbxgAAApvGQAACm8sAAAKcp0BAHARBCgkAAAKEwQCKBYAAApvFwAACnKUAgBwbxgAAAoRBG8w
AAAKAigWAAAKFm8aAAAKKkFMAAACAAAArwAAADcAAADmAAAAFQAAAAAAAAACAAAAFgEAAKMAAAC5
AQAAFQAAAAAAAAACAAAAegAAAKgBAAAiAgAAFQAAAAAAAAAeAigxAAAKKgAAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAApAQAACN+AAAQBQAATAcAACNT
dHJpbmdzAAAAAFwMAADIAgAAI1VTACQPAAAQAAAAI0dVSUQAAAA0DwAA5AEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMQAAAAIAAAAPAAAA
AgAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9
ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnAC
BgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBK
BHACCgB2BGAECgCPBGAEBgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgB1BboAFgCoBZYF
FgC5BYoFFgDIBYoFFgDjBYoFBgARBv4FFgA3BooFBgA/BroAFgBNBooFFgBuBooFBgCRBroABgC5
BnACBgDiBroABgDqBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUA
AQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJK
AFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI
4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAa
AhsAAgC0IwAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEA
vAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARi
AKEAUwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkA
awWdANkAewVdAPkAvAEbAAEBvAEbAPkAwwWhAAEB2gWpABEBHQavABkBKwadACkBRga1AAEBYga7
ADkBeQbBACkBRgbFABkBiAbNAEEBnQYbADkBpQbRACEBYgXVAAkAsQbaAEkBxAbBACkBzQbfAAkA
2QbBAFEB8wblAFkB2QbsACkBRgbxAOkA/gb3ABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCd
AS4AIwCdAS4AYwDDAS4ACwAsAS4AEwB0AS4AMwB0AS4AKwCdAS4AOwCjAS4AQwCdAS4AWwC6AUMA
awBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA/AACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgAD
AAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAZBZ+PgAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEA
AAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAK
AAIFAAAAAAQAAAAAAAAAAAAAAAEAigUAAAAAAAAAAAEAAAAIBwAABQAEAAAAADxNb2R1bGU+AFNU
X2M2MzQ5NmJiMWY1NTRjYzNiYzg0YWY3YmZlYWNkOThhLmRsbABSZXNvdXJjZXMAU1RfMTYzN2U0
MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWlu
AFNUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0AFNjcmlwdFJlc3VsdHMAbXNjb3Js
aWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUX2M2MzQ5
NmJiMWY1NTRjYzNiYzg0YWY3YmZlYWNkOThhAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBJbnQzMgBzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0u
RGF0YS5PbGVEYgBPbGVEYkRhdGFBZGFwdGVyAERhdGFUYWJsZQBGaWxsAERhdGFSb3dDb2xsZWN0
aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAFN5c3RlbS5Db2xsZWN0aW9u
cwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cAU3RyaW5nAENv
bmNhdABEYXRhQ29sdW1uQ29sbGVjdGlvbgBnZXRfQ29sdW1ucwBEYXRhQ29sdW1uAGdldF9Db2x1
bW5OYW1lAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAZ2V0X09yZGluYWwAR2V0VHlwZQBN
ZW1iZXJJbmZvAGdldF9OYW1lAG9wX0VxdWFsaXR5AFRvU3RyaW5nAENvbnZlcnQARGF0ZVRpbWUA
VG9EYXRlVGltZQBzZXRfVmFsdWUAU1RfMTYzN2U0MGI4NWZiNGRjODhjM2I3MzUzZDUyOTViNTQu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADEANgAzADcAZQA0ADAAYgA4
ADUAZgBiADQAZABjADgAOABjADMAYgA3ADMANQAzAGQANQAyADkANQBiADUANAAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAL1UAcwBlAHIAOgA6AEYAYQBpAGwAZQBk
AEwAbwBvAGsAdQBwAEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AACVVAHMAZQByADoAOgBGAGEA
aQBsAGUAZABMAG8AbwBrAHUAcAAACTwAdAByAD4AAAk8AHQAZAA+AAALPAAvAHQAZAA+AAALPAAv
AHQAcgA+AAARRABhAHQAZQBUAGkAbQBlAAAVTQBNAC8AZABkAC8AeQB5AHkAeQAAGTwAdAByACAA
YwBvAGwAcwBwAGEAbgA9AAAlPgA8AHQAZAA+AC4ALgAuADwALwB0AGQAPgA8AC8AdAByAD4AABE8
AC8AdABhAGIAbABlAD4AAB1UAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAAID1IAByAGUAYwBv
AHIAZAAoAHMAKQAgAGMAbwB1AGwAZAAgAG4AbwB0ACAAcABlAHIAZgBvAHIAbQAgAGEAIABsAG8A
bwBrAHUAcAAuACAAUABvAHMAcwBpAGIAbABlACAAZAB1AHAAbABpAGMAYQB0AGUAIAByAGUAYwBv
AHIAZABzAC4AIABUAGgAZQAgAGYAaQBsAGUAIAB3AGEAcwAgAHMAdABpAGwAbAAgAGEAcgBjAGgA
aQB2AGUAZAAgAHQAbwAgAHAAcgBlAHYAZQBuAHQAIAByAGUAcAByAG8AYwBlAHMAcwBpAG4AZwAu
ADwAcAA+AAAzVQBzAGUAcgA6ADoARgBhAGkAbABlAGQATABvAG8AawB1AHAATQBlAHMAcwBhAGcA
ZQAASxvOjrdH+0SY2XX2WSi1jQAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQA
ABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQg
AQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEF
IAESdRwDIAAcByACCBKAgRwFIAASgIUFIAASgI0FAAIODg4FIAASgJkDIAAOBwAEDg4ODg4DIAAC
AyAACAQgARwIBCAAElEFAAICDg4GAAERgK0OBCABDg4FAAEOHRwEIAEBHC8HERJ9EoCBEoCdEoCR
DggSgJESgJ0SgJ0SgI0SgI0SgKESgI0RgK0SgKEdHBKAoUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8x
NjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE1AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAC4NQAAAAAAAAAA
AADONQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwDUAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQB+PmQWAAABAH4+ZBY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADIA
LgAxADUAOQA5ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYwA2
ADMANAA5ADYAYgBiADEAZgA1ADUANABjAGMAMwBiAGMAOAA0AGEAZgA3AGIAZgBlAGEAYwBkADkA
OABhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AYwA2ADMANAA5ADYAYgBiADEAZgA1ADUANABjAGMAMwBiAGMAOAA0
AGEAZgA3AGIAZgBlAGEAYwBkADkAOABhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADkAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADkAOAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{0B0D7B98-BD9C-41E0-9179-BE702A516D30}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Missing Non-matched Deal and SSN Email Message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d18f00af743640a0affd274e512f5c20"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::DealSSNNotMatched,User::DealSSNNotMatchedCount"
              ReadWriteVariables="User::DealSSNNotMatchedMessage">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_d18f00af743640a0affd274e512f5c20.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B35B93C8-6BA0-4DAE-8DC2-C5871E6E7D25}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace>
    <AssemblyName>ST_d18f00af743640a0affd274e512f5c20</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::DealSSNNotMatchedCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::DealSSNNotMatched"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }

                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::DealSSNNotMatchedCount"].Value.ToString() + " record(s) were in the source file, but the DealId and SSN combination did not match an owner in the Owner table.<p>" + strMsg;
                /// MessageBox.Show(strMsg);
                Dts.Variables["User::DealSSNNotMatchedMessage"].Value = strMsg;

            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d18f00af743640a0affd274e512f5c20.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_d18f00af743640a0affd274e512f5c20.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALcG81UAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAXjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABA1AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
NQAAAAAAAEgAAAACAAUAMCQAAOAQAAABAAAAAAAAAHgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABaAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPigCAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcq0AAHATBBYTBQYHAigWAAAKbxcA
AApyvQAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOE8BAAARCW8gAAAKdCQAAAETBhEG
DREEcu0AAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy9wAA
cAhvIwAACnIBAQBwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRyDQEA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApyGQEAcCgrAAAKLDkRBHL3AABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yKwEA
cCguAAAKcgEBAHAoJAAAChMEKyQRBHL3AABwCQhvJwAACm8oAAAKbywAAApyAQEAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEJbyUAAAo6pf7//94VEQl1KAAAARMP
EQ8sBxEPbyYAAArcEQRyQQEAcCghAAAKEwRyUwEAcAIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAK
bywAAApycQEAcBEEKCQAAAoTBAIoFgAACm8XAAAKclwCAHBvGAAAChEEby8AAAoCKBYAAAoWbxoA
AAoqAABBTAAAAgAAAK8AAAA3AAAA5gAAABUAAAAAAAAAAgAAABYBAACjAAAAuQEAABUAAAAAAAAA
AgAAAHoAAABiAQAA3AEAABUAAAAAAAAAHgIoMAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAoAQAACN+AAAMBQAATAcAACNTdHJpbmdzAAAAAFgMAACc
AgAAI1VTAPQOAAAQAAAAI0dVSUQAAAAEDwAA3AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMAAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAA
AAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4B
BgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9
A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBKBHACCgB2BGAECgCPBGAE
BgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgB1BboAFgCoBZYFFgC5BYoFFgDIBYoFFgDj
BYoFBgARBv4FFgA3BooFBgA/BroAFgBNBooFFgBuBooFBgCRBroABgC5BnACBgDiBroABgDqBroA
AAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAAD
AQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMY
vAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggG
Aj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAaAhsAAgBwIwAAAACGGLwB
GwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFY
AHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARiAKEAUwRpACkAvAFuALkA
vAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkAawWdANkAewVdAPkAvAEb
AAEBvAEbAPkAwwWhAAEB2gWpABEBHQavABkBKwadACkBRga1AAEBYga7ADkBeQbBACkBRgbFABkB
iAbNAEEBnQYbADkBpQbRACEBYgXVAAkAsQbaAEkBxAbBACkBzQbfAAkA2QbBAFEB8wblAFkB2Qbs
AOkA/gbxABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCVAS4AIwCVAS4AYwC7AS4ACwAkAS4A
EwBsAS4AMwBsAS4AKwCVAS4AOwCbAS4AQwCVAS4AWwCyAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBT
AHUA9gACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASA
AAABAAAAZBZbPgAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAA
AAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKAAIFAAAAAAQAAAAAAAAAAAAAAAEA
igUAAAAAAAAAAAEAAAAIBwAABQAEAAAAAAAAPE1vZHVsZT4AU1RfZDE4ZjAwYWY3NDM2NDBhMGFm
ZmQyNzRlNTEyZjVjMjAuZGxsAFJlc291cmNlcwBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNk
NTI5NWI1NC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMTYzN2U0MGI4NWZiNGRj
ODhjM2I3MzUzZDUyOTViNTQAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5
c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2
YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfZDE4ZjAwYWY3NDM2NDBhMGFmZmQyNzRl
NTEyZjVjMjAAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
VHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNz
ZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAElu
dDMyAHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURiAE9sZURiRGF0
YUFkYXB0ZXIARGF0YVRhYmxlAEZpbGwARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJu
YWxEYXRhQ29sbGVjdGlvbkJhc2UAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVu
dW1lcmF0b3IAZ2V0X0N1cnJlbnQARGF0YVJvdwBTdHJpbmcAQ29uY2F0AERhdGFDb2x1bW5Db2xs
ZWN0aW9uAGdldF9Db2x1bW5zAERhdGFDb2x1bW4AZ2V0X0NvbHVtbk5hbWUATW92ZU5leHQASURp
c3Bvc2FibGUARGlzcG9zZQBnZXRfT3JkaW5hbABHZXRUeXBlAE1lbWJlckluZm8AZ2V0X05hbWUA
b3BfRXF1YWxpdHkAVG9TdHJpbmcAQ29udmVydABEYXRlVGltZQBUb0RhdGVUaW1lAHNldF9WYWx1
ZQBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMAAABxUwBUAF8AMQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMA
MwBiADcAMwA1ADMAZAA1ADIAOQA1AGIANQA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAA5VQBzAGUAcgA6ADoARABlAGEAbABTAFMATgBOAG8AdABNAGEAdABjAGgA
ZQBkAEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AAC9VAHMAZQByADoAOgBEAGUAYQBsAFMAUwBO
AE4AbwB0AE0AYQB0AGMAaABlAGQAAAk8AHQAcgA+AAAJPAB0AGQAPgAACzwALwB0AGQAPgAACzwA
LwB0AHIAPgAAEUQAYQB0AGUAVABpAG0AZQAAFU0ATQAvAGQAZAAvAHkAeQB5AHkAABE8AC8AdABh
AGIAbABlAD4AAB1UAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAAIDpIAByAGUAYwBvAHIAZAAo
AHMAKQAgAHcAZQByAGUAIABpAG4AIAB0AGgAZQAgAHMAbwB1AHIAYwBlACAAZgBpAGwAZQAsACAA
YgB1AHQAIAB0AGgAZQAgAEQAZQBhAGwASQBkACAAYQBuAGQAIABTAFMATgAgAGMAbwBtAGIAaQBu
AGEAdABpAG8AbgAgAGQAaQBkACAAbgBvAHQAIABtAGEAdABjAGgAIABhAG4AIABvAHcAbgBlAHIA
IABpAG4AIAB0AGgAZQAgAE8AdwBuAGUAcgAgAHQAYQBiAGwAZQAuADwAcAA+AAA9VQBzAGUAcgA6
ADoARABlAGEAbABTAFMATgBOAG8AdABNAGEAdABjAGgAZQBkAE0AZQBzAHMAYQBnAGUAAAAAhOI+
l6bqH0mx6sZqNIx77wAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQAB
ARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgAB
ElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwD
IAAcByACCBKAgRwFIAASgIUFIAASgI0FAAIODg4FIAASgJkDIAAOBwAEDg4ODg4DIAACAyAACAQg
ARwIBCAAElEFAAICDg4GAAERgK0OBCABDg4EIAEBHC0HEBJ9EoCBEoCdEoCRDggSgJESgJ0SgJ0S
gI0SgI0SgKESgI0RgK0SgKESgKFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfMTYzN2U0MGI4NWZiNGRj
ODhjM2I3MzUzZDUyOTViNTQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAODUAAAAAAAAAAAAATjUAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAEA1AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBbPmQWAAABAFs+ZBY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADIA
LgAxADUAOQA2ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZAAx
ADgAZgAwADAAYQBmADcANAAzADYANAAwAGEAMABhAGYAZgBkADIANwA0AGUANQAxADIAZgA1AGMA
MgAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AZAAxADgAZgAwADAAYQBmADcANAAzADYANAAwAGEAMABhAGYAZgBk
ADIANwA0AGUANQAxADIAZgA1AGMAMgAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADYAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADYAMwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Missing SSN Email Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{22BD81A6-B158-41D4-91B5-C077B1C34292}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Missing SSN Email Message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_1637e40b85fb4dc88c3b7353d5295b54"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::MissingSSNCount,User::MissingSSNs"
              ReadWriteVariables="User::MissingSSNMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::MissingSSNCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::MissingSSNs"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::MissingSSNCount"].Value.ToString() + " record(s) were missing a SSN.<p>" + strMsg;
                /// MessageBox.Show(strMsg);
                Dts.Variables["User::MissingSSNMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1637e40b85fb4dc88c3b7353d5295b54.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_1637e40b85fb4dc88c3b7353d5295b54.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace>
    <AssemblyName>ST_1637e40b85fb4dc88c3b7353d5295b54</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_1637e40b85fb4dc88c3b7353d5295b54.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM0G81UAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAbjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABw0AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
NAAAAAAAAEgAAAACAAUAMCQAAOwPAAABAAAAAAAAAHgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABaAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPigCAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcp8AAHATBBYTBQYHAigWAAAKbxcA
AApyrwAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOE8BAAARCW8gAAAKdCQAAAETBhEG
DREEctMAAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRy3QAA
cAhvIwAACnLnAABwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRy8wAA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApy/wAAcCgrAAAKLDkRBHLdAABwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yEQEA
cCguAAAKcucAAHAoJAAAChMEKyQRBHLdAABwCQhvJwAACm8oAAAKbywAAApy5wAAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEJbyUAAAo6pf7//94VEQl1KAAAARMP
EQ8sBxEPbyYAAArcEQRyJwEAcCghAAAKEwRyOQEAcAIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAK
bywAAApyVwEAcBEEKCQAAAoTBAIoFgAACm8XAAAKcpsBAHBvGAAAChEEby8AAAoCKBYAAAoWbxoA
AAoqAABBTAAAAgAAAK8AAAA3AAAA5gAAABUAAAAAAAAAAgAAABYBAACjAAAAuQEAABUAAAAAAAAA
AgAAAHoAAABiAQAA3AEAABUAAAAAAAAAHgIoMAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAoAQAACN+AAAMBQAAKAcAACNTdHJpbmdzAAAAADQMAADM
AQAAI1VTAAAOAAAQAAAAI0dVSUQAAAAQDgAA3AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMAAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAA
AAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4B
BgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9
A3ACBgBWA3ACBgCPA28DBgCvA28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBSBDwECgBrBDwE
BgCABG8DDgCiBBQBDgDEBBQBEgAdBf0EEgA1Bf0EBgBRBboAFgCEBXIFFgCVBWYFFgCkBWYFFgC/
BWYFBgDtBdoFFgATBmYFBgAbBroAFgApBmYFFgBKBmYFBgBtBroABgCVBnACBgC+BroABgDGBroA
AAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAAD
AQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMY
vAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggG
Aj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYmwSJAAIAvCAAAAAAhgAaAhsAAgBwIwAAAACGGLwB
GwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFY
AHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAFARiAKEALwRpACkAvAFuALkA
vAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSNANkAJwWSAOEAPgWXAOkARwWdANkAVwVdAPkAvAEb
AAEBvAEbAPkAnwWhAAEBtgWpABEB+QWvABkBBwadACkBIga1AAEBPga7ADkBVQbBACkBIgbFABkB
ZAbNAEEBeQYbADkBgQbRACEBPgXVAAkAjQbaAEkBoAbBACkBqQbfAAkAtQbBAFEBzwblAFkBtQbs
AOkA2gbxABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCVAS4AIwCVAS4AYwC7AS4ACwAkAS4A
EwBsAS4AMwBsAS4AKwCVAS4AOwCbAS4AQwCVAS4AWwCyAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBT
AHUA9gACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASA
AAABAAAAZBZmPgAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAA
AAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKAN4EAAAAAAQAAAAAAAAAAAAAAAEA
ZgUAAAAAAAAAAAEAAADkBgAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMTYzN2U0MGI4NWZiNGRjODhj
M2I3MzUzZDUyOTViNTQuZGxsAFJlc291cmNlcwBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNk
NTI5NWI1NC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMTYzN2U0MGI4NWZiNGRj
ODhjM2I3MzUzZDUyOTViNTQAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5
c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2
YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9i
amVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUA
Z2V0X0l0ZW0AZ2V0X1ZhbHVlAEludDMyAHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhAFN5c3Rl
bS5EYXRhLk9sZURiAE9sZURiRGF0YUFkYXB0ZXIARGF0YVRhYmxlAEZpbGwARGF0YVJvd0NvbGxl
Y3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAU3lzdGVtLkNvbGxlY3Rp
b25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQARGF0YVJvdwBTdHJpbmcA
Q29uY2F0AERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAERhdGFDb2x1bW4AZ2V0X0Nv
bHVtbk5hbWUATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBnZXRfT3JkaW5hbABHZXRUeXBl
AE1lbWJlckluZm8AZ2V0X05hbWUAb3BfRXF1YWxpdHkAVG9TdHJpbmcAQ29udmVydABEYXRlVGlt
ZQBUb0RhdGVUaW1lAHNldF9WYWx1ZQBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1
NC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AMQA2ADMANwBlADQAMABi
ADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1AGIANQA0AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAArVQBzAGUAcgA6ADoATQBpAHMAcwBp
AG4AZwBTAFMATgBDAG8AdQBuAHQAAA88AHQAYQBiAGwAZQA+AAAjVQBzAGUAcgA6ADoATQBpAHMA
cwBpAG4AZwBTAFMATgBzAAAJPAB0AHIAPgAACTwAdABkAD4AAAs8AC8AdABkAD4AAAs8AC8AdABy
AD4AABFEAGEAdABlAFQAaQBtAGUAABVNAE0ALwBkAGQALwB5AHkAeQB5AAARPAAvAHQAYQBiAGwA
ZQA+AAAdVABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwAgAABDIAByAGUAYwBvAHIAZAAoAHMAKQAg
AHcAZQByAGUAIABtAGkAcwBzAGkAbgBnACAAYQAgAFMAUwBOAC4APABwAD4AAC9VAHMAZQByADoA
OgBNAGkAcwBzAGkAbgBnAFMAUwBOAE0AZQBzAHMAYQBnAGUAAAAQK+7SOP+DQ4hZRI5WDKh8AAi3
elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYS
DAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZ
BAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwHIAIIEoCBHAUgABKA
hQUgABKAjQUAAg4ODgUgABKAmQMgAA4HAAQODg4ODgMgAAIDIAAIBCABHAgEIAASUQUAAgIODgYA
ARGArQ4EIAEODgQgAQEcLQcQEn0SgIESgJ0SgJEOCBKAkRKAnRKAnRKAjRKAjRKAoRKAjRGArRKA
oRKAoUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1
NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE1AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBAABENAAAAAAAAAAAAABeNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
UDQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBmPmQWAAABAGY+ZBY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADIA
LgAxADUAOQA3ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMQA2
ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1AGIA
NQA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AMQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBi
ADcAMwA1ADMAZAA1ADIAOQA1AGIANQA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADcANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADcANAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABwNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8DF4711F-EAA9-4359-9700-B225B13224F6}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Multiple Owner for Same Deal and SSN Message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0c483ef4276046428e4546e822c53fb7"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::MultipleOwnerSameSSN,User::MultipleOwnerSameSSNCount"
              ReadWriteVariables="User::MultipleOwnerSameSSNMessage">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.Data.OleDb;
#endregion

namespace ST_1637e40b85fb4dc88c3b7353d5295b54
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            if ((int)Dts.Variables["User::MultipleOwnerSameSSNCount"].Value > 0)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
                OleDbDataAdapter oleDA = new OleDbDataAdapter();
                DataTable dt = new DataTable();
                DataColumn col = null;
                DataRow row = null;
                string strMsg = "<table>";
                int icounter = 0;

                oleDA.Fill(dt, Dts.Variables["User::MultipleOwnerSameSSN"].Value);

                foreach (DataRow row_ in dt.Rows)
                {
                    row = row_;
                    strMsg = strMsg + "<tr>";

                    /// Get Column Headers
                    if (icounter == 0)
                    {
                        foreach (DataColumn col_ in dt.Columns)
                        {
                            col = col_;
                            strMsg = strMsg + "<td>" + col.ColumnName + "</td>";
                        }
                        strMsg = strMsg + "</tr>";
                    }
                    /// Get data
                    foreach (DataColumn col_ in dt.Columns)
                    {
                        col = col_;
                        if (row[col.Ordinal].GetType().Name == "DateTime")
                        {
                            strMsg = strMsg + "<td>" + Convert.ToDateTime(row[col.Ordinal].ToString()).ToString("MM/dd/yyyy") + "</td>";
                        }
                        else
                        {
                            strMsg = strMsg + "<td>" + row[col.Ordinal].ToString() + "</td>";
                        }
                    }
                }
                strMsg = strMsg + "</table>";
                strMsg = "The following " + Dts.Variables["User::MultipleOwnerSameSSNCount"].Value.ToString() + " record(s) have multiple possible owners for the same SSN.<p>" + strMsg;
                /// MessageBox.Show(strMsg);
                Dts.Variables["User::MultipleOwnerSameSSNMessage"].Value = strMsg;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_0c483ef4276046428e4546e822c53fb7.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{b35b93c8-6ba0-4dae-8dc2-c5871e6e7d25}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1637e40b85fb4dc88c3b7353d5295b54</RootNamespace><AssemblyName>ST_0c483ef4276046428e4546e822c53fb7</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:CodeName>
		<msb:DisplayName>ST_1637e40b85fb4dc88c3b7353d5295b54</msb:DisplayName>
		<msb:ProjectId>{A52ECD60-A6A4-4983-89C5-3D9FD0EAED93}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0c483ef4276046428e4546e822c53fb7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Settings.get_Default():ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Sett" +
    "ings")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1637e40b85fb4dc88c3b7353d5295b54")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1637e40b85fb4dc88c3b7353d5295b54.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1637e40b85fb4dc88c3b7353d5295b54.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_0c483ef4276046428e4546e822c53fb7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN0G81UAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAADjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQ0AABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
NAAAAAAAAEgAAAACAAUAMCQAAIQQAAABAAAAAAAAAHgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABaAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEWPigCAAACKBYAAAoWbxoAAApzGwAACgpzHAAACgsUDBQNcrMAAHATBBYTBQYHAigWAAAKbxcA
AApywwAAcG8YAAAKbxkAAApvHQAACiYHbx4AAApvHwAAChMJOE8BAAARCW8gAAAKdCQAAAETBhEG
DREEcvkAAHAoIQAAChMEEQUtZwdvIgAACm8fAAAKEworKhEKbyAAAAp0JwAAARMHEQcMEQRyAwEA
cAhvIwAACnINAQBwKCQAAAoTBBEKbyUAAAotzd4VEQp1KAAAARMLEQssBxELbyYAAArcEQRyGQEA
cCghAAAKEwQHbyIAAApvHwAAChMMOJAAAAARDG8gAAAKdCcAAAETCBEIDAkIbycAAApvKAAACm8p
AAAKbyoAAApyJQEAcCgrAAAKLDkRBHIDAQBwCQhvJwAACm8oAAAKbywAAAooLQAAChMNEg1yNwEA
cCguAAAKcg0BAHAoJAAAChMEKyQRBHIDAQBwCQhvJwAACm8oAAAKbywAAApyDQEAcCgkAAAKEwQR
DG8lAAAKOmT////eFREMdSgAAAETDhEOLAcRDm8mAAAK3BEJbyUAAAo6pf7//94VEQl1KAAAARMP
EQ8sBxEPbyYAAArcEQRyTQEAcCghAAAKEwRyXwEAcAIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAK
bywAAApyfQEAcBEEKCQAAAoTBAIoFgAACm8XAAAKcvkBAHBvGAAAChEEby8AAAoCKBYAAAoWbxoA
AAoqAABBTAAAAgAAAK8AAAA3AAAA5gAAABUAAAAAAAAAAgAAABYBAACjAAAAuQEAABUAAAAAAAAA
AgAAAHoAAABiAQAA3AEAABUAAAAAAAAAHgIoMAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAoAQAACN+AAAMBQAATAcAACNTdHJpbmdzAAAAAFgMAABA
AgAAI1VTAJgOAAAQAAAAI0dVSUQAAACoDgAA3AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
JTMAFgAAAQAAACsAAAAFAAAABgAAAAkAAAABAAAAMAAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAA
AAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4B
BgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9
A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBKBHACCgB2BGAECgCPBGAE
BgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgB1BboAFgCoBZYFFgC5BYoFFgDIBYoFFgDj
BYoFBgARBv4FFgA3BooFBgA/BroAFgBNBooFFgBuBooFBgCRBroABgC5BnACBgDiBroABgDqBroA
AAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAAD
AQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMY
vAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggG
Aj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYvwSJAAIAvCAAAAAAhgAaAhsAAgBwIwAAAACGGLwB
GwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFY
AHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAOARiAKEAUwRpACkAvAFuALkA
vAF6AMkAvAEbABEAvAEbANEAvAEbABkA+gSNANkASwWSAOEAYgWXAOkAawWdANkAewVdAPkAvAEb
AAEBvAEbAPkAwwWhAAEB2gWpABEBHQavABkBKwadACkBRga1AAEBYga7ADkBeQbBACkBRgbFABkB
iAbNAEEBnQYbADkBpQbRACEBYgXVAAkAsQbaAEkBxAbBACkBzQbfAAkA2QbBAFEB8wblAFkB2Qbs
AOkA/gbxABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwCVAS4AIwCVAS4AYwC7AS4ACwAkAS4A
EwBsAS4AMwBsAS4AKwCVAS4AOwCbAS4AQwCVAS4AWwCyAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBT
AHUA9gACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASA
AAABAAAAZBZuPgAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAA
AAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAAAAAKAAIFAAAAAAQAAAAAAAAAAAAAAAEA
igUAAAAAAAAAAAEAAAAIBwAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMGM0ODNlZjQyNzYwNDY0Mjhl
NDU0NmU4MjJjNTNmYjcuZGxsAFJlc291cmNlcwBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNk
NTI5NWI1NC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMTYzN2U0MGI4NWZiNGRj
ODhjM2I3MzUzZDUyOTViNTQAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5
c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2
YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfMGM0ODNlZjQyNzYwNDY0MjhlNDU0NmU4
MjJjNTNmYjcAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
VHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNz
ZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAElu
dDMyAHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURiAE9sZURiRGF0
YUFkYXB0ZXIARGF0YVRhYmxlAEZpbGwARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJu
YWxEYXRhQ29sbGVjdGlvbkJhc2UAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVu
dW1lcmF0b3IAZ2V0X0N1cnJlbnQARGF0YVJvdwBTdHJpbmcAQ29uY2F0AERhdGFDb2x1bW5Db2xs
ZWN0aW9uAGdldF9Db2x1bW5zAERhdGFDb2x1bW4AZ2V0X0NvbHVtbk5hbWUATW92ZU5leHQASURp
c3Bvc2FibGUARGlzcG9zZQBnZXRfT3JkaW5hbABHZXRUeXBlAE1lbWJlckluZm8AZ2V0X05hbWUA
b3BfRXF1YWxpdHkAVG9TdHJpbmcAQ29udmVydABEYXRlVGltZQBUb0RhdGVUaW1lAHNldF9WYWx1
ZQBTVF8xNjM3ZTQwYjg1ZmI0ZGM4OGMzYjczNTNkNTI5NWI1NC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMAAABxUwBUAF8AMQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMA
MwBiADcAMwA1ADMAZAA1ADIAOQA1AGIANQA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAA/VQBzAGUAcgA6ADoATQB1AGwAdABpAHAAbABlAE8AdwBuAGUAcgBTAGEA
bQBlAFMAUwBOAEMAbwB1AG4AdAAADzwAdABhAGIAbABlAD4AADVVAHMAZQByADoAOgBNAHUAbAB0
AGkAcABsAGUATwB3AG4AZQByAFMAYQBtAGUAUwBTAE4AAAk8AHQAcgA+AAAJPAB0AGQAPgAACzwA
LwB0AGQAPgAACzwALwB0AHIAPgAAEUQAYQB0AGUAVABpAG0AZQAAFU0ATQAvAGQAZAAvAHkAeQB5
AHkAABE8AC8AdABhAGIAbABlAD4AAB1UAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAAHsgAHIA
ZQBjAG8AcgBkACgAcwApACAAaABhAHYAZQAgAG0AdQBsAHQAaQBwAGwAZQAgAHAAbwBzAHMAaQBi
AGwAZQAgAG8AdwBuAGUAcgBzACAAZgBvAHIAIAB0AGgAZQAgAHMAYQBtAGUAIABTAFMATgAuADwA
cAA+AABDVQBzAGUAcgA6ADoATQB1AGwAdABpAHAAbABlAE8AdwBuAGUAcgBTAGEAbQBlAFMAUwBO
AE0AZQBzAHMAYQBnAGUAAAAAAJtfeAzzXHlHpNJ9cpYmoUUACLd6XFYZNOCJCImEXc2AgMyRAwYS
FQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQE
AAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAA
AAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAcgAggSgIEcBSAAEoCFBSAAEoCNBQACDg4OBSAAEoCZ
AyAADgcABA4ODg4OAyAAAgMgAAgEIAEcCAQgABJRBQACAg4OBgABEYCtDgQgAQ4OBCABARwtBxAS
fRKAgRKAnRKAkQ4IEoCREoCdEoCdEoCNEoCNEoChEoCNEYCtEoChEoChRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUXzE2MzdlNDBiODVmYjRkYzg4YzNiNzM1M2Q1Mjk1YjU0AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAANw0
AAAAAAAAAAAAAP40AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwNAAAAAAAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBuPmQWAAABAG4+ZBY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MQA2ADMANwBlADQAMABiADgANQBmAGIANABkAGMAOAA4AGMAMwBiADcAMwA1ADMAZAA1ADIAOQA1
AGIANQA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAzADIA
LgAxADUAOQA4ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMABj
ADQAOAAzAGUAZgA0ADIANwA2ADAANAA2ADQAMgA4AGUANAA1ADQANgBlADgAMgAyAGMANQAzAGYA
YgA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AMABjADQAOAAzAGUAZgA0ADIANwA2ADAANAA2ADQAMgA4AGUANAA1
ADQANgBlADgAMgAyAGMANQAzAGYAYgA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADEANgAzADcAZQA0ADAAYgA4ADUAZgBiADQAZABjADgAOABjADMAYgA3
ADMANQAzAGQANQAyADkANQBiADUANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADgAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMgAuADEANQA5ADgAMgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAQNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Move Excel file to Archive Folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{3BABF5DE-B15E-41A8-A3C8-B64DA7CAACD9}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Excel file to Archive Folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskSourcePath="User::CurrentFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="Flat File Archive" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Process Main Excel File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{35210AB3-EB40-4F6A-964D-F6F5E0170258}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process Main Excel File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Process Main Excel File.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{2DC393DE-7166-4F16-B985-EF6953EDB98D}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{3EE4E27F-7481-47B6-A929-D247E66A4A2E}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split based on Owner SSN match"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input].Columns[OwnerIdCount]"
                          cachedDataType="i4"
                          cachedName="OwnerIdCount"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Only One Owner With SSN]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Only One Owner With SSN"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">OwnerIdCount == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Multiple Owners With Same SSN]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Multiple Owners With Same SSN"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]} &gt; 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">OwnerIdCount &gt; 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split based on SSN existing"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[SSN Exists]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="SSN Exists"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">![ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]}) &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL(TypedSSN) &amp;&amp; !ISNULL(TypedInquiryID)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[SSN Missing]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="SSN Missing"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]}) &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(TypedSSN) &amp;&amp; !ISNULL(TypedInquiryID)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Convert SSN NVarchar to Varchar"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Inputs[Data Conversion Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="11"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]"
                          name="Inquiry SSN Transformed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Count Deal and SSN Did Not Match Existing Owner"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Count Deal and SSN Did Not Match Existing Owner">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::DealSSNNotMatchedCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Deal and SSN Did Not Match Existing Owner.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Deal and SSN Did Not Match Existing Owner.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Count Deal and SSN Did Not Match Existing Owner.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Count Failed Lookup"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Count Failed Lookup">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::FailedLookupCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Failed Lookup.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Failed Lookup.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Count Failed Lookup.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Count Failure Records"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Count Failure Records">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::FailedInsertCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Failure Records.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Failure Records.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Count Failure Records.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Count Multiple Owners for same SSN"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Count Multiple Owners for same SSN">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::MultipleOwnerSameSSNCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Multiple Owners for same SSN.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count Multiple Owners for same SSN.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Count Multiple Owners for same SSN.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Count SSN Missing"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Count SSN Missing">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::MissingSSNCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count SSN Missing.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Count SSN Missing.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Count SSN Missing.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Deal and SSN Did Not Match Existing Owner"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Deal and SSN Did Not Match Existing Owner">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::DealSSNNotMatched</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Deal and SSN Did Not Match Existing Owner.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Deal and SSN Did Not Match Existing Owner.Inputs[Recordset Destination Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Deal and SSN Did Not Match Existing Owner.Inputs[Recordset Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Deal and SSN Did Not Match Existing Owner.Inputs[Recordset Destination Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Failed Data Conversion">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::FailedDataConversion</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion.Inputs[Recordset Destination Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion.Inputs[Recordset Destination Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion.Inputs[Recordset Destination Input].Columns[Inquiry Ref]"
                          cachedDataType="i4"
                          cachedName="Inquiry Ref"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry Ref]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion.Inputs[Recordset Destination Input].Columns[FICO Score 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FICO Score 2"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[FICO Score 2]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Failed Data Conversion Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::FailedDataConversionCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Failed Insert Records"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Failed Insert Records">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::FailedInserts</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Failed Insert Records.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Insert Records.Inputs[Recordset Destination Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Insert Records.Inputs[Recordset Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Failed Lookup">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::FailedLookup</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup.Inputs[Recordset Destination Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup.Inputs[Recordset Destination Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup.Inputs[Recordset Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup.Inputs[Recordset Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[CSV Flat File Source]"
                      connectionManagerRefId="Package.ConnectionManagers[CSV Flat File Source]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry ID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]"
                          name="Inquiry ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry SSN]"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]"
                          name="Inquiry SSN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry Ref]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry Ref]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry Ref]"
                          name="Inquiry Ref"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[FICO Score 2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FICO Score 2]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[FICO Score 2]"
                          name="FICO Score 2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry ID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry First Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry First Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry Middle Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry Middle Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry Last Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry Last Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry Street Address]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry Street Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry Generation]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry Generation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry Zip Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry Zip Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry SSN]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry SSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Inquiry Ref]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Inquiry Ref" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Consumer Statements]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Consumer Statements" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 12]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 13]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FCRA Attributes]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FCRA Attributes" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 15]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FICO Score 2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="FICO Score 2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Column 17]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Column 17" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get Trade Date based on File Name"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input].Columns[TypedSSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]"
                          name="TypedSSN"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE](#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]},"-","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TypedSSN,"-","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input].Columns[FICO Score 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FICO Score 2"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[FICO Score 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input].Columns[TypedInquiryID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]"
                          name="TypedInquiryID"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)TypedInquiryID</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input].Columns[Inquiry Ref]"
                          cachedDataType="i4"
                          cachedName="Inquiry Ref"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry Ref]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]"
                          name="TradeDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBDate)@[User::CurrentFileDate]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBDate)@[User::CurrentFileDate]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedDealId]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedDealId]"
                          name="TypedDealId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry Ref]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)[Inquiry Ref]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedFICOScore]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedFICOScore]"
                          name="TypedFICOScore"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[FICO Score 2]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)[FICO Score 2]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert into ExperianMigration"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ExperianMigration]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].Columns[Inquiry SSN Transformed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Inquiry SSN Transformed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Output].Columns[Inquiry SSN Transformed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].Columns[OwnerId]"
                          cachedDataType="i4"
                          cachedName="OwnerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].Columns[TypedDealId]"
                          cachedDataType="i4"
                          cachedName="TypedDealId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedDealId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].Columns[TypedFICOScore]"
                          cachedDataType="i4"
                          cachedName="TypedFICOScore"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedFICOScore]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[DealId]"
                          dataType="i4"
                          name="DealId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[FICOScore]"
                          dataType="i4"
                          name="FICOScore" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerSSN]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="OwnerSSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[TradeDate]"
                          dataType="dbDate"
                          name="TradeDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[InquiryID]"
                          dataType="i2"
                          name="InquiryID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[OwnerId]"
                          dataType="i4"
                          name="OwnerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input].ExternalColumns[ExperianMigrationId]"
                          dataType="i4"
                          name="ExperianMigrationId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup DealOwner with SSN"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [stg].[vwDealOwnerSSN]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [stg].[vwDealOwnerSSN]) [refTable]
where [refTable].[SSN] = ? and [refTable].[DealId] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DealId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OwnerId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SSN" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OwnerIdCount" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]};#{Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedDealId]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Connections[OleDbConnection]"
                      connectionManagerID="{EF7BFD25-7D38-40D4-B5BF-AE79745F42D9}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Phoenix]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">SSN</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input].Columns[TypedDealId]"
                          cachedDataType="i4"
                          cachedName="TypedDealId"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TypedDealId]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">DealId</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerId]"
                          name="OwnerId"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OwnerId</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]"
                          name="OwnerIdCount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OwnerIdCount</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Missing SSN records"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Missing SSN records">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::MissingSSNs</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Missing SSN records.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Missing SSN records.Inputs[Recordset Destination Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Missing SSN records.Inputs[Recordset Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Multiple Owner for Same Deal and SSN">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::MultipleOwnerSameSSN</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN.Inputs[Recordset Destination Input].Columns[Inquiry ID]"
                          cachedDataType="i4"
                          cachedName="Inquiry ID"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN.Inputs[Recordset Destination Input].Columns[Inquiry SSN]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="Inquiry SSN"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output].Columns[Inquiry SSN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN.Inputs[Recordset Destination Input].Columns[TradeDate]"
                          cachedDataType="dbDate"
                          cachedName="TradeDate"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output].Columns[TradeDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN.Inputs[Recordset Destination Input].Columns[OwnerIdCount]"
                          cachedDataType="i4"
                          cachedName="OwnerIdCount"
                          lineageId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output].Columns[OwnerIdCount]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Error Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion Count.Inputs[Row Count Input 1]"
                  name="Derived Column Error Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Error Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Count Failed Lookup.Inputs[Row Count Input 1]"
                  name="Lookup Error Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Count Deal and SSN Did Not Match Existing Owner.Inputs[Row Count Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Multiple Owners With Same SSN]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Count Multiple Owners for same SSN.Inputs[Row Count Input 1]"
                  name="Multiple Owners With Same SSN"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Multiple Owners With Same SSN]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[OLE DB Destination Error Output]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Count Failure Records.Inputs[Row Count Input 1]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Only One Owner With SSN]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar.Inputs[Data Conversion Input]"
                  name="Only One Owner With SSN"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match.Outputs[Only One Owner With SSN]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Deal and SSN Did Not Match Existing Owner.Inputs[Recordset Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Count Deal and SSN Did Not Match Existing Owner.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 11]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup.Inputs[Recordset Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Count Failed Lookup.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 12]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Failed Insert Records.Inputs[Recordset Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Count Failure Records.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 13]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN.Inputs[Recordset Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Count Multiple Owners for same SSN.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 14]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Missing SSN records.Inputs[Recordset Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Count SSN Missing.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 15]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion.Inputs[Recordset Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Exists]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN.Inputs[Lookup Input]"
                  name="SSN Exists"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[SSN Exists]" />
                <path
                  refId="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Missing]"
                  endId="Package\Foreach Loop Container\Process Main Excel File\Count SSN Missing.Inputs[Row Count Input 1]"
                  name="SSN Missing"
                  startId="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing.Outputs[SSN Missing]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Send Email for Records That Can't Be Inserted"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{ADF4A4F8-FE60-4590-8DB1-EC76D31EE36E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email for Records That Can't Be Inserted"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3ab14f93e13a41028f381a6ec9af7e1e"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::EmailPreMessageError,User::EmailSubjectError,User::FailedInsertMessage,User::FailedLookupMessage,$Project::EmailSMTPPort,$Project::EmailSendFrom,$Project::EmailSendFromPassword,$Project::EmailSendToForErrors,$Project::EmailSMTPServer">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_3ab14f93e13a41028f381a6ec9af7e1e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{77A47644-B0BF-4290-A05F-2794EA65B58D}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e8445de5f16f4a6ca84011ab5dbf3e52</RootNamespace><AssemblyName>ST_3ab14f93e13a41028f381a6ec9af7e1e</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Text.RegularExpressions;

#endregion

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Storing SSIS variables in .Net variables. You could skip this step and call the SSIS variables in the actual mail code
            // to reduce the number of code lines. Or you could fill these .Net variables with hardcoded values.
            String SendMailFrom = Dts.Variables["$Project::EmailSendFrom"].Value.ToString();
            String SendMailFromPWD = Dts.Variables["$Project::EmailSendFromPassword"].GetSensitiveValue().ToString();
            String SendMailTo = Dts.Variables["$Project::EmailSendToForErrors"].Value.ToString();
            String SendMailSubject = Dts.Variables["User::EmailSubjectError"].Value.ToString();
            String SendMailBody = Dts.Variables["User::EmailPreMessageError"].Value.ToString() + Dts.Variables["User::FailedInsertMessage"].Value.ToString() + "<br><br><br>" + Dts.Variables["User::FailedLookupMessage"].Value.ToString();
            String SMTPServer = Dts.Variables["$Project::EmailSMTPServer"].Value.ToString();
            int SMTPServerPort = (int)Dts.Variables["$Project::EmailSMTPPort"].Value;

            SmtpClient smtpClient = new SmtpClient();
            MailMessage message = new MailMessage();

            MailAddress fromAddress = new MailAddress(SendMailFrom);

            //You can have multiple emails separated by ;
            string[] sEmailTo = Regex.Split(SendMailTo, ";");

            smtpClient.Host = SMTPServer;
            smtpClient.Port = SMTPServerPort;
            smtpClient.EnableSsl = true;

            System.Net.NetworkCredential myCredentials = new System.Net.NetworkCredential(SendMailFrom, SendMailFromPWD);
            smtpClient.Credentials = myCredentials;

            if (sEmailTo != null)
            {
                for (int i = 0; i < sEmailTo.Length; ++i)
                {
                    if (sEmailTo[i] != null && sEmailTo[i] != "")
                    {
                        message.To.Add(sEmailTo[i]);
                    }
                }
            }

            message.From = fromAddress;
            message.Priority = MailPriority.High;
            message.IsBodyHtml = true;
            message.Subject = SendMailSubject;
            message.Body = SendMailBody;

            smtpClient.Send(message);
			
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:DisplayName>
		<msb:ProjectId>{B97944A0-224B-491F-B14D-56C655CF4C33}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_3ab14f93e13a41028f381a6ec9af7e1e.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Settings.get_Default():ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Sett" +
    "ings")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_3ab14f93e13a41028f381a6ec9af7e1e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANkn8lUAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAPjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOwzAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
NAAAAAAAAEgAAAACAAUAiCMAAGQQAAABAAAAAAAAANAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBQD6AQAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApyowAAcG8YAAAKbxsAAApvGgAACgsCKBYAAApvFwAACnLjAABwbxgAAApv
GQAACm8aAAAKDAIoFgAACm8XAAAKciEBAHBvGAAACm8ZAAAKbxoAAAoNAigWAAAKbxcAAApyUQEA
cG8YAAAKbxkAAApvGgAACgIoFgAACm8XAAAKcocBAHBvGAAACm8ZAAAKbxoAAApyuwEAcAIoFgAA
Cm8XAAAKctUBAHBvGAAACm8ZAAAKbxoAAAooHAAAChMEAigWAAAKbxcAAApyCQIAcG8YAAAKbxkA
AApvGgAAChMFAigWAAAKbxcAAApyPQIAcG8YAAAKbxkAAAqlHwAAARMGcx0AAAoTB3MeAAAKEwgG
cx8AAAoTCQhybQIAcCggAAAKEwoRBxEFbyEAAAoRBxEGbyIAAAoRBxdvIwAACgYHcyQAAAoTCxEH
EQtvJQAAChEKLDwWEwwrLxEKEQyaLCIRChEMmnJxAgBwKCYAAAosEREIbycAAAoRChEMmm8oAAAK
EQwXWBMMEQwRCo5pMskRCBEJbykAAAoRCBhvKgAAChEIF28rAAAKEQgJbywAAAoRCBEEby0AAAoR
BxEIby4AAAoCKBYAAAoWby8AAAoqHgIoMAAACioAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAdAQAACN+AADgBAAAMAcAACNTdHJpbmdzAAAAABAM
AAB0AgAAI1VTAIQOAAAQAAAAI0dVSUQAAACUDgAA0AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMA
AAD6JTMAFgAAAQAAACcAAAAFAAAABgAAAAkAAAABAAAAMAAAAAIAAAAPAAAAAgAAAAIAAAADAAAA
BAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBv
AV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3AC
BgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgAEBPEDBgAhBLoABgAmBLoABgBKBHACCgB2BGAECgCP
BGAEBgCkBG8DDgDGBBQBDgDoBBQBEgBBBSEFEgBZBSEFBgCQBboABgCeBboACgC0BaQFCgC/BaQF
CgDLBaQFCgD2BdcFCgAtBiIGCgA/BiIGCgBwBqQFCgCaBqQFAAAAAAEAAAAAAAEAAQAAABAAMgA8
AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEA
rAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCR
IAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcg
AAAAAJEYvwSJAAIAvCAAAAAAhgAaAhsAAgDCIgAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFY
AEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEA
vAEbAJkAvAEbAAkAvAEbAKEAOARiAKEAUwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEb
ABkA+gSNANkASwWSAOEAYgWXAOkAawWdAAkAdQWhAOkAfgWdAPEAlwWlAAEBvAEbAAkBvAEbABEB
vAFYABkB/AWtAAEBAgZYAAEBCwZdAAEBFAa0ACEBvAG5AAEBUga/APEAYgbGAAkBhgbMADEBjQZY
AAkBkQbSAAkBpwbZAAkBtAa0AAkBwwZYAAkBzwZYAAEB2AbgANkA3QZdABkAvAEbAAgAFABOAAgA
GABTACkAkwCAAC4AGwBxAS4AIwBxAS4AYwCvAS4ACwAAAS4AEwBIAS4AMwBIAS4AKwB3AS4AOwCG
AS4AQwBxAS4AWwCmAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA5wACAAEAAwADAAAAbwEvAAAA
7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAYxasdwAAAAAAAM0DAAAE
AAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAA
AAAMAAAAAAAAAAAAAAAKAAIFAAAAAAAAAAABAAAA7AYAAAUABAAAAAAAADxNb2R1bGU+AFNUXzNh
YjE0ZjkzZTEzYTQxMDI4ZjM4MWE2ZWM5YWY3ZTFlLmRsbABSZXNvdXJjZXMAU1RfZTg0NDVkZTVm
MTZmNGE2Y2E4NDAxMWFiNWRiZjNlNTIuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNU
X2U4NDQ1ZGU1ZjE2ZjRhNmNhODQwMTFhYjVkYmYzZTUyAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVs
dABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzNhYjE0Zjkz
ZTEzYTQxMDI4ZjM4MWE2ZWM5YWY3ZTFlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RN
b2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9J
dGVtAGdldF9WYWx1ZQBUb1N0cmluZwBHZXRTZW5zaXRpdmVWYWx1ZQBTdHJpbmcAQ29uY2F0AElu
dDMyAFN5c3RlbS5OZXQuTWFpbABTbXRwQ2xpZW50AE1haWxNZXNzYWdlAE1haWxBZGRyZXNzAFN5
c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdleABTcGxpdABzZXRfSG9zdABzZXRfUG9y
dABzZXRfRW5hYmxlU3NsAFN5c3RlbS5OZXQATmV0d29ya0NyZWRlbnRpYWwASUNyZWRlbnRpYWxz
QnlIb3N0AHNldF9DcmVkZW50aWFscwBvcF9JbmVxdWFsaXR5AE1haWxBZGRyZXNzQ29sbGVjdGlv
bgBnZXRfVG8AQWRkAHNldF9Gcm9tAE1haWxQcmlvcml0eQBzZXRfUHJpb3JpdHkAc2V0X0lzQm9k
eUh0bWwAc2V0X1N1YmplY3QAc2V0X0JvZHkAU2VuZABzZXRfVGFza1Jlc3VsdABTVF9lODQ0NWRl
NWYxNmY0YTZjYTg0MDExYWI1ZGJmM2U1Mi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AABxUwBUAF8AZQA4ADQANAA1AGQAZQA1AGYAMQA2AGYANABhADYAYwBhADgANAAwADEAMQBhAGIA
NQBkAGIAZgAzAGUANQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAvJABQAHIAbwBqAGUAYwB0ADoAOgBFAG0AYQBpAGwAUwBlAG4AZABGAHIAbwBtAAA/JABQAHIA
bwBqAGUAYwB0ADoAOgBFAG0AYQBpAGwAUwBlAG4AZABGAHIAbwBtAFAAYQBzAHMAdwBvAHIAZAAA
PSQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMAZQBuAGQAVABvAEYAbwByAEUAcgByAG8A
cgBzAAAvVQBzAGUAcgA6ADoARQBtAGEAaQBsAFMAdQBiAGoAZQBjAHQARQByAHIAbwByAAA1VQBz
AGUAcgA6ADoARQBtAGEAaQBsAFAAcgBlAE0AZQBzAHMAYQBnAGUARQByAHIAbwByAAAzVQBzAGUA
cgA6ADoARgBhAGkAbABlAGQASQBuAHMAZQByAHQATQBlAHMAcwBhAGcAZQAAGTwAYgByAD4APABi
AHIAPgA8AGIAcgA+AAAzVQBzAGUAcgA6ADoARgBhAGkAbABlAGQATABvAG8AawB1AHAATQBlAHMA
cwBhAGcAZQAAMyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMATQBUAFAAUwBlAHIAdgBl
AHIAAC8kAFAAcgBvAGoAZQBjAHQAOgA6AEUAbQBhAGkAbABTAE0AVABQAFAAbwByAHQAAAM7AAAB
AACUSAAawJ31SpnnOeXF5LmbAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAA
EhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCAB
AQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUg
ARJ1HAMgABwDIAAOBwAEDg4ODg4GAAIdDg4OBCABAQIFIAIBDg4GIAEBEoCVBQACAg4OBSAAEoCZ
BiABARKAiQYgAQERgJ0GIAEBEoCFGAcNDg4ODg4OCBKAgRKAhRKAiR0OEoCRCEcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF9lODQ0NWRlNWYxNmY0YTZjYTg0MDExYWI1ZGJmM2U1MgAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE1AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAUNAAAAAAAAAAAAAAuNAAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAIDQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCsd2MWAAABAKx3YxY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAAMAAw
ADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8A
ZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGUAOAA0
ADQANQBkAGUANQBmADEANgBmADQAYQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUA
MgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADcAMwAxAC4AMwAw
ADYAMwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADMAYQBiADEA
NABmADkAMwBlADEAMwBhADQAMQAwADIAOABmADMAOAAxAGEANgBlAGMAOQBhAGYANwBlADEAZQAu
AGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA1AAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMwBhAGIAMQA0AGYAOQAzAGUAMQAzAGEA
NAAxADAAMgA4AGYAMwA4ADEAYQA2AGUAYwA5AGEAZgA3AGUAMQBlAC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAOAA0ADQANQBkAGUANQBmADEANgBmADQA
YQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUAMgAAAEQADwABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMQAuADMAMAA2ADMANgAAAAAASAAPAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMQAuADMAMAA2
ADMANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Send Email With Data To Be Addressed"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{1AAB5B17-F05A-4E8B-9C75-6C0EDBF66B3E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Email With Data To Be Addressed"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e4e72e6803454599983955340fe19283"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DealSSNNotMatchedMessage,User::EmailPreMessageDataIssues,User::EmailSubjectDataIssues,User::FailedDataConversionMessage,User::MissingSSNMessage,User::MultipleOwnerSameSSNMessage,$Package::EmailToExpediaMissingSSNs,$Project::EmailSMTPPort,$Project::EmailSendFrom,$Project::EmailSendFromPassword,$Project::EmailSMTPServer">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_e8445de5f16f4a6ca84011ab5dbf3e52")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_e4e72e6803454599983955340fe19283.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{77A47644-B0BF-4290-A05F-2794EA65B58D}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e8445de5f16f4a6ca84011ab5dbf3e52</RootNamespace><AssemblyName>ST_e4e72e6803454599983955340fe19283</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Text.RegularExpressions;

#endregion

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Storing SSIS variables in .Net variables. You could skip this step and call the SSIS variables in the actual mail code
            // to reduce the number of code lines. Or you could fill these .Net variables with hardcoded values.
            String SendMailFrom = Dts.Variables["$Project::EmailSendFrom"].Value.ToString();
            String SendMailFromPWD = Dts.Variables["$Project::EmailSendFromPassword"].GetSensitiveValue().ToString();
            String SendMailTo = Dts.Variables["$Package::EmailToExpediaMissingSSNs"].Value.ToString();
            String SendMailSubject = Dts.Variables["User::EmailSubjectDataIssues"].Value.ToString();
            String SendMailBody = Dts.Variables["User::EmailPreMessageDataIssues"].Value.ToString() + Dts.Variables["User::FailedDataConversionMessage"].Value.ToString() + "<br><br><br>" + Dts.Variables["User::DealSSNNotMatchedMessage"].Value.ToString() + "<br><br><br>" + Dts.Variables["User::MissingSSNMessage"].Value.ToString() + "<br><br><br>" + Dts.Variables["User::MultipleOwnerSameSSNMessage"].Value.ToString();
            String SMTPServer = Dts.Variables["$Project::EmailSMTPServer"].Value.ToString();
            int SMTPServerPort = (int)Dts.Variables["$Project::EmailSMTPPort"].Value;

            SmtpClient smtpClient = new SmtpClient();
            MailMessage message = new MailMessage();

            MailAddress fromAddress = new MailAddress(SendMailFrom);

            //You can have multiple emails separated by ;
            string[] sEmailTo = Regex.Split(SendMailTo, ";");

            smtpClient.Host = SMTPServer;
            smtpClient.Port = SMTPServerPort;
            smtpClient.EnableSsl = true;

            System.Net.NetworkCredential myCredentials = new System.Net.NetworkCredential(SendMailFrom, SendMailFromPWD);
            smtpClient.Credentials = myCredentials;

            if (sEmailTo != null)
            {
                for (int i = 0; i < sEmailTo.Length; ++i)
                {
                    if (sEmailTo[i] != null && sEmailTo[i] != "")
                    {
                        message.To.Add(sEmailTo[i]);
                    }
                }
            }

            message.From = fromAddress;
            message.Priority = MailPriority.High;
            message.IsBodyHtml = true;
            message.Subject = SendMailSubject;
            message.Body = SendMailBody;

            smtpClient.Send(message);
			
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:CodeName>
		<msb:DisplayName>ST_e8445de5f16f4a6ca84011ab5dbf3e52</msb:DisplayName>
		<msb:ProjectId>{B97944A0-224B-491F-B14D-56C655CF4C33}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e4e72e6803454599983955340fe19283.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Settings.get_Default():ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Sett" +
    "ings")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e8445de5f16f4a6ca84011ab5dbf3e52.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e4e72e6803454599983955340fe19283.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJfI9FUAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAXjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAg1AABTAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
NQAAAAAAAEgAAAACAAUA+CMAABARAAABAAAAAAAAAEAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBABsAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApyowAAcG8YAAAKbxsAAApvGgAACgsCKBYAAApvFwAACnLjAABwbxgAAApv
GQAACm8aAAAKDAIoFgAACm8XAAAKcisBAHBvGAAACm8ZAAAKbxoAAAoNHo0eAAABEw0RDRYCKBYA
AApvFwAACnJlAQBwbxgAAApvGQAACm8aAAAKohENFwIoFgAACm8XAAAKcqUBAHBvGAAACm8ZAAAK
bxoAAAqiEQ0YcukBAHCiEQ0ZAigWAAAKbxcAAApyAwIAcG8YAAAKbxkAAApvGgAACqIRDRpy6QEA
cKIRDRsCKBYAAApvFwAACnJBAgBwbxgAAApvGQAACm8aAAAKohENHHLpAQBwohENHQIoFgAACm8X
AAAKcnECAHBvGAAACm8ZAAAKbxoAAAqiEQ0oHAAAChMEAigWAAAKbxcAAApytQIAcG8YAAAKbxkA
AApvGgAAChMFAigWAAAKbxcAAApy6QIAcG8YAAAKbxkAAAqlHwAAARMGcx0AAAoTB3MeAAAKEwgG
cx8AAAoTCQhyGQMAcCggAAAKEwoRBxEFbyEAAAoRBxEGbyIAAAoRBxdvIwAACgYHcyQAAAoTCxEH
EQtvJQAAChEKLDwWEwwrLxEKEQyaLCIRChEMmnIdAwBwKCYAAAosEREIbycAAAoRChEMmm8oAAAK
EQwXWBMMEQwRCo5pMskRCBEJbykAAAoRCBhvKgAAChEIF28rAAAKEQgJbywAAAoRCBEEby0AAAoR
BxEIby4AAAoCKBYAAAoWby8AAAoqHgIoMAAACioAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHQEAAAjfgAA4AQAADAHAAAjU3RyaW5ncwAAAAAQDAAA
IAMAACNVUwAwDwAAEAAAACNHVUlEAAAAQA8AANABAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA
+iUzABYAAAEAAAAnAAAABQAAAAYAAAAJAAAAAQAAADAAAAACAAAADwAAAAIAAAACAAAAAwAAAAQA
AAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFe
AQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYA
PQNwAgYAVgNwAgYAjwNvAwYArwNvAwYABATxAwYAIQS6AAYAJgS6AAYASgRwAgoAdgRgBAoAjwRg
BAYApARvAw4AxgQUAQ4A6AQUARIAQQUhBRIAWQUhBQYAkAW6AAYAngW6AAoAtAWkBQoAvwWkBQoA
ywWkBQoA9gXXBQoALQYiBgoAPwYiBgoAcAakBQoAmgakBQAAAAABAAAAAAABAAEAAAAQADIAPAAF
AAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgARAH8BEwARAKwB
FwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAA
AAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAA
AACRGL8EiQACALwgAAAAAIYAGgIbAAIANCMAAAAAhhi8ARsAAgAAAAEANwI5ALwBWABBALwBWABJ
ALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACBALwBWACJALwBXQCRALwB
GwCZALwBGwAJALwBGwChADgEYgChAFMEaQApALwBbgC5ALwBegDJALwBGwARALwBGwDRALwBGwAZ
APoEjQDZAEsFkgDhAGIFlwDpAGsFnQAJAHUFoQDpAH4FnQDxAJcFpQABAbwBGwAJAbwBGwARAbwB
WAAZAfwFqwABAQIGWAABAQsGXQABARQGsgAhAbwBtwABAVIGvQDxAGIGxAAJAYYGygAxAY0GWAAJ
AZEG0AAJAacG1wAJAbQGsgAJAcMGWAAJAc8GWAABAdgG3gDZAN0GXQAZALwBGwAIABQATgAIABgA
UwApAJMAgAAuABsAcQEuACMAcQEuAGMArwEuAAsAAAEuABMASAEuADMASAEuACsAdwEuADsAhgEu
AEMAcQEuAFsApgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AOUAAgABAAMAAwAAAG8BLwAAAO4B
NAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAGUWi3YAAAAAAADNAwAABAAA
AAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAA
DAAAAAAAAAAAAAAACgACBQAAAAAAAAAAAQAAAOwGAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF9lNGU3
MmU2ODAzNDU0NTk5OTgzOTU1MzQwZmUxOTI4My5kbGwAUmVzb3VyY2VzAFNUX2U4NDQ1ZGU1ZjE2
ZjRhNmNhODQwMTFhYjVkYmYzZTUyLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9l
ODQ0NWRlNWYxNmY0YTZjYTg0MDExYWI1ZGJmM2U1MgBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5
c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJl
c291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24A
Q3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQA
RGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF9lNGU3MmU2ODAz
NDU0NTk5OTgzOTU1MzQwZmUxOTI4MwBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFz
c2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9k
ZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRl
bQBnZXRfVmFsdWUAVG9TdHJpbmcAR2V0U2Vuc2l0aXZlVmFsdWUAU3RyaW5nAENvbmNhdABJbnQz
MgBTeXN0ZW0uTmV0Lk1haWwAU210cENsaWVudABNYWlsTWVzc2FnZQBNYWlsQWRkcmVzcwBTeXN0
ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAUmVnZXgAU3BsaXQAc2V0X0hvc3QAc2V0X1BvcnQA
c2V0X0VuYWJsZVNzbABTeXN0ZW0uTmV0AE5ldHdvcmtDcmVkZW50aWFsAElDcmVkZW50aWFsc0J5
SG9zdABzZXRfQ3JlZGVudGlhbHMAb3BfSW5lcXVhbGl0eQBNYWlsQWRkcmVzc0NvbGxlY3Rpb24A
Z2V0X1RvAEFkZABzZXRfRnJvbQBNYWlsUHJpb3JpdHkAc2V0X1ByaW9yaXR5AHNldF9Jc0JvZHlI
dG1sAHNldF9TdWJqZWN0AHNldF9Cb2R5AFNlbmQAc2V0X1Rhc2tSZXN1bHQAU1RfZTg0NDVkZTVm
MTZmNGE2Y2E4NDAxMWFiNWRiZjNlNTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAA
cVMAVABfAGUAOAA0ADQANQBkAGUANQBmADEANgBmADQAYQA2AGMAYQA4ADQAMAAxADEAYQBiADUA
ZABiAGYAMwBlADUAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
LyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMAZQBuAGQARgByAG8AbQAAPyQAUAByAG8A
agBlAGMAdAA6ADoARQBtAGEAaQBsAFMAZQBuAGQARgByAG8AbQBQAGEAcwBzAHcAbwByAGQAAEck
AFAAYQBjAGsAYQBnAGUAOgA6AEUAbQBhAGkAbABUAG8ARQB4AHAAZQBkAGkAYQBNAGkAcwBzAGkA
bgBnAFMAUwBOAHMAADlVAHMAZQByADoAOgBFAG0AYQBpAGwAUwB1AGIAagBlAGMAdABEAGEAdABh
AEkAcwBzAHUAZQBzAAA/VQBzAGUAcgA6ADoARQBtAGEAaQBsAFAAcgBlAE0AZQBzAHMAYQBnAGUA
RABhAHQAYQBJAHMAcwB1AGUAcwAAQ1UAcwBlAHIAOgA6AEYAYQBpAGwAZQBkAEQAYQB0AGEAQwBv
AG4AdgBlAHIAcwBpAG8AbgBNAGUAcwBzAGEAZwBlAAAZPABiAHIAPgA8AGIAcgA+ADwAYgByAD4A
AD1VAHMAZQByADoAOgBEAGUAYQBsAFMAUwBOAE4AbwB0AE0AYQB0AGMAaABlAGQATQBlAHMAcwBh
AGcAZQAAL1UAcwBlAHIAOgA6AE0AaQBzAHMAaQBuAGcAUwBTAE4ATQBlAHMAcwBhAGcAZQAAQ1UA
cwBlAHIAOgA6AE0AdQBsAHQAaQBwAGwAZQBPAHcAbgBlAHIAUwBhAG0AZQBTAFMATgBNAGUAcwBz
AGEAZwBlAAAzJABQAHIAbwBqAGUAYwB0ADoAOgBFAG0AYQBpAGwAUwBNAFQAUABTAGUAcgB2AGUA
cgAALyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFMATQBUAFAAUABvAHIAdAAAAzsAAAEA
ANbBtp7RsOpOp5A3xrstNRMACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAAS
GQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEB
CAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSAB
EnUcAyAAHAMgAA4FAAEOHQ4GAAIdDg4OBCABAQIFIAIBDg4GIAEBEoCVBQACAg4OBSAAEoCZBiAB
ARKAiQYgAQERgJ0GIAEBEoCFGgcODg4ODg4OCBKAgRKAhRKAiR0OEoCRCB0ORwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NUX2U4NDQ1ZGU1ZjE2ZjRhNmNhODQwMTFhYjVkYmYzZTUyAAAFAQAAAAAOAQAJTWlj
cm9zb2Z0AAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEAADA1AAAAAAAAAAAAAE41AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABANQAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCLdmUWAAABAIt2ZRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAAMAAw
ADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8A
ZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGUAOAA0
ADQANQBkAGUANQBmADEANgBmADQAYQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUA
MgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADcAMwAzAC4AMwAw
ADMANAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUANABlADcA
MgBlADYAOAAwADMANAA1ADQANQA5ADkAOQA4ADMAOQA1ADUAMwA0ADAAZgBlADEAOQAyADgAMwAu
AGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA1AAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZQA0AGUANwAyAGUANgA4ADAAMwA0ADUA
NAA1ADkAOQA5ADgAMwA5ADUANQAzADQAMABmAGUAMQA5ADIAOAAzAC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAOAA0ADQANQBkAGUANQBmADEANgBmADQA
YQA2AGMAYQA4ADQAMAAxADEAYQBiADUAZABiAGYAMwBlADUAMgAAAEQADwABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMwAuADMAMAAzADQANwAAAAAASAAPAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAMwAuADMAMAAz
ADQANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{64F90F1F-8256-4F66-8503-4C2FC2FB658E}"
          DTS:From="Package\Foreach Loop Container\Process Main Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Move Excel file to Archive Folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{6362B88A-CB2D-449C-B32A-F631C802BA3D}"
          DTS:From="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Create Missing SSN Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{BDAF4587-9456-45DE-8390-EB6A67A4B63D}"
          DTS:From="Package\Foreach Loop Container\Create Failed Insert Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Create Failed Lookup Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{32DE7510-48DC-476F-9120-0061306A76B7}"
          DTS:From="Package\Foreach Loop Container\Create Missing SSN Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{C13F8A35-6C04-497F-864D-0D67E895DD5E}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::FailedInsertCount] &gt; 0 ||  @[User::FailedInsertCount] &gt; 0"
          DTS:From="Package\Foreach Loop Container\Process Main Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Create Failed Insert Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{D9B34A7E-507A-47EA-8610-8972B7367C3E}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::DealSSNNotMatchedCount] &gt; 0 ||  @[User::MissingSSNCount] &gt; 0 ||  @[User::MultipleOwnerSameSSNCount] &gt; 0"
          DTS:From="Package\Foreach Loop Container\Process Main Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{5958CAF9-4C93-453E-ADBA-B0BB49DF605B}"
          DTS:From="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Create Failed Data Conversion Message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{BBB5CADD-8360-4D6C-843A-509A30314A00}"
          DTS:From="Package\Foreach Loop Container\Create Failed Lookup Email Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach Loop Container\Send Email for Records That Can't Be Inserted" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{B35C473D-DFF3-4134-9584-2A9E0836A38F}"
          DTS:From="Package\Foreach Loop Container\Create Failed Data Conversion Message"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Foreach Loop Container\Send Email With Data To Be Addressed" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{1EAEC212-7C29-4744-9CAF-58F87AAB2AE2}"
          DTS:ObjectName="{1EAEC212-7C29-4744-9CAF-58F87AAB2AE2}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{886B60A8-3177-493B-B893-4C3EE729FAD2}"
      DTS:From="Package\Create Archive Folder"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="182,42"
          Id="Package\Create Archive Folder"
          TopLeft="619.857142857143,137.428571428571" />
        <NodeLayout
          Size="267,42"
          Id="Package\Foreach Loop Container\Create Failed Data Conversion Message"
          TopLeft="74.25,375.25" />
        <NodeLayout
          Size="246,42"
          Id="Package\Foreach Loop Container\Create Failed Insert Email Message"
          TopLeft="748.25,115.75" />
        <NodeLayout
          Size="252,42"
          Id="Package\Foreach Loop Container\Create Failed Lookup Email Message"
          TopLeft="751.25,199.25" />
        <NodeLayout
          Size="356,42"
          Id="Package\Foreach Loop Container\Create Missing Non-matched Deal and SSN Email Message"
          TopLeft="41.25,109.75" />
        <NodeLayout
          Size="244,42"
          Id="Package\Foreach Loop Container\Create Missing SSN Email Message"
          TopLeft="92.25,201.75" />
        <NodeLayout
          Size="343,42"
          Id="Package\Foreach Loop Container\Create Multiple Owner for Same Deal and SSN Message"
          TopLeft="39.25,291.75" />
        <NodeLayout
          Size="234,42"
          Id="Package\Foreach Loop Container\Move Excel file to Archive Folder"
          TopLeft="448.75,194.75" />
        <NodeLayout
          Size="189,42"
          Id="Package\Foreach Loop Container\Process Main Excel File"
          TopLeft="476.25,19.75" />
        <NodeLayout
          Size="300,42"
          Id="Package\Foreach Loop Container\Send Email for Records That Can't Be Inserted"
          TopLeft="730.25,290.75" />
        <NodeLayout
          Size="266,42"
          Id="Package\Foreach Loop Container\Send Email With Data To Be Addressed"
          TopLeft="78.7500000000001,453.25" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="568.25,61.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,133"
              Start="0,0"
              End="0,125.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,125.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="216.75,151.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="874.25,157.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.5"
              Start="0,0"
              End="0,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="212.5,243.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="631.083333333333,61.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="240.166666666667,54"
              Start="0,0"
              End="240.166666666667,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.339378238342" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.339378238342"
                    Point2="0,14.339378238342"
                    Point3="4,14.339378238342" />
                  <mssgle:LineSegment
                    End="236.166666666667,14.339378238342" />
                  <mssgle:CubicBezierSegment
                    Point1="236.166666666667,14.339378238342"
                    Point2="240.166666666667,14.339378238342"
                    Point3="240.166666666667,18.339378238342" />
                  <mssgle:LineSegment
                    End="240.166666666667,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="112.083333333333,19.339378238342,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="525.5,61.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-306.25,48"
              Start="0,0"
              End="-306.25,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.4452173913043" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.4452173913043"
                    Point2="0,16.4452173913043"
                    Point3="-4,16.4452173913043" />
                  <mssgle:LineSegment
                    End="-302.25,16.4452173913043" />
                  <mssgle:CubicBezierSegment
                    Point1="-302.25,16.4452173913043"
                    Point2="-306.25,16.4452173913043"
                    Point3="-306.25,20.4452173913043" />
                  <mssgle:LineSegment
                    End="-306.25,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-161.125,21.4452173913043,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="209.25,333.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.5"
              Start="0,0"
              End="0,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="878.75,241.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.5"
              Start="0,0"
              End="0,42">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="209.75,417.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1131,652"
          Size="1131,695"
          Id="Package\Foreach Loop Container"
          TopLeft="141,255" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="708.678571428572,179.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.571428571429"
              Start="0,0"
              End="0,68.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Process Main Excel File">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="239,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Convert SSN NVarchar to Varchar"
          TopLeft="36.25,463.75" />
        <NodeLayout
          Size="189,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion"
          TopLeft="1436,277" />
        <NodeLayout
          Size="217,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration"
          TopLeft="42,551" />
        <NodeLayout
          Size="176,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Missing SSN records"
          TopLeft="1181,376" />
        <NodeLayout
          Size="265,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Multiple Owner for Same Deal and SSN"
          TopLeft="321.25,560.25" />
        <NodeLayout
          Size="289,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Deal and SSN Did Not Match Existing Owner"
          TopLeft="836,464" />
        <NodeLayout
          Size="216,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN"
          TopLeft="565,273" />
        <NodeLayout
          Size="169,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Count SSN Missing"
          TopLeft="1181,282" />
        <NodeLayout
          Size="249,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Get Trade Date based on File Name"
          TopLeft="850,92" />
        <NodeLayout
          Size="254,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Count Multiple Owners for same SSN"
          TopLeft="320,467.75" />
        <NodeLayout
          Size="320,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Count Deal and SSN Did Not Match Existing Owner"
          TopLeft="821,376" />
        <NodeLayout
          Size="184,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Count Failure Records"
          TopLeft="52.75,639.25" />
        <NodeLayout
          Size="146,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Failed Lookup"
          TopLeft="611,466.75" />
        <NodeLayout
          Size="177,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Count Failed Lookup"
          TopLeft="590.25,375.75" />
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Flat File Source"
          TopLeft="893,10" />
        <NodeLayout
          Size="180,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Failed Insert Records"
          TopLeft="52.25,731.25" />
        <NodeLayout
          Size="220,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Failed Data Conversion Count"
          TopLeft="1416,181" />
        <NodeLayout
          Size="292,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on Owner SSN match"
          TopLeft="194.25,370.25" />
        <NodeLayout
          Size="265,42"
          Id="Package\Foreach Loop Container\Process Main Excel File\Conditional Split based on SSN existing"
          TopLeft="847,179" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Missing]"
          TopLeft="1022.33333333333,221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="243.166666666667,61"
              Start="0,0"
              End="243.166666666667,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.6196549137284" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.6196549137284"
                    Point2="0,24.6196549137284"
                    Point3="4,24.6196549137284" />
                  <mssgle:LineSegment
                    End="239.166666666667,24.6196549137284" />
                  <mssgle:CubicBezierSegment
                    Point1="239.166666666667,24.6196549137284"
                    Point2="243.166666666667,24.6196549137284"
                    Point3="243.166666666667,28.6196549137284" />
                  <mssgle:LineSegment
                    End="243.166666666667,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="94.4746809895835,29.6196549137284,54.2173046875,11.4677734375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[SSN Exists]"
          TopLeft="936.666666666667,221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-263.666666666667,52"
              Start="0,0"
              End="-263.666666666667,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.9872468117029" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.9872468117029"
                    Point2="0,20.9872468117029"
                    Point3="-4,20.9872468117029" />
                  <mssgle:LineSegment
                    End="-259.666666666667,20.9872468117029" />
                  <mssgle:CubicBezierSegment
                    Point1="-259.666666666667,20.9872468117029"
                    Point2="-263.666666666667,20.9872468117029"
                    Point3="-263.666666666667,24.9872468117029" />
                  <mssgle:LineSegment
                    End="-263.666666666667,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-155.576575520833,25.9872468117029,47.486484375,9.5341796875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 15]"
          TopLeft="1528.25,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 14]"
          TopLeft="1267.25,324">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 13]"
          TopLeft="450.375,509.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.5000000000001"
              Start="0,0"
              End="0,43.0000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.0000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 12]"
          TopLeft="143.5,681.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 11]"
          TopLeft="681.375,417.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Row Count Output 1]"
          TopLeft="980.75,418">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Only One Owner With SSN]"
          TopLeft="292.916666666667,412.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-137.166666666667,51.5"
              Start="0,0"
              End="-137.166666666667,44">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7683923705722" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7683923705722"
                    Point2="0,20.7683923705722"
                    Point3="-4,20.7683923705722" />
                  <mssgle:LineSegment
                    End="-133.166666666667,20.7683923705722" />
                  <mssgle:CubicBezierSegment
                    Point1="-133.166666666667,20.7683923705722"
                    Point2="-137.166666666667,20.7683923705722"
                    Point3="-137.166666666667,24.7683923705722" />
                  <mssgle:LineSegment
                    End="-137.166666666667,44" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-127.730950520833,25.7683923705722,118.295234375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[OLE DB Destination Error Output]"
          TopLeft="147.625,593">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.2499999999999"
              Start="0,0"
              End="0,38.7499999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.7499999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-81.8700390625,11.375,163.740078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Multiple Owners With Same SSN]"
          TopLeft="387.583333333333,412.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.4166666666667,55.5"
              Start="0,0"
              End="59.4166666666667,48">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.3814713896458" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.3814713896458"
                    Point2="0,22.3814713896458"
                    Point3="4,22.3814713896458" />
                  <mssgle:LineSegment
                    End="55.4166666666667,22.3814713896458" />
                  <mssgle:CubicBezierSegment
                    Point1="55.4166666666667,22.3814713896458"
                    Point2="59.4166666666667,22.3814713896458"
                    Point3="59.4166666666667,26.3814713896458" />
                  <mssgle:LineSegment
                    End="59.4166666666667,48" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.9217643229167,27.3814713896458,143.2601953125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup No Match Output]"
          TopLeft="725,315">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="256,61"
              Start="0,0"
              End="256,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8292682926829" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8292682926829"
                    Point2="0,20.8292682926829"
                    Point3="4,20.8292682926829" />
                  <mssgle:LineSegment
                    End="252,20.8292682926829" />
                  <mssgle:CubicBezierSegment
                    Point1="252,20.8292682926829"
                    Point2="256,20.8292682926829"
                    Point3="256,24.8292682926829" />
                  <mssgle:LineSegment
                    End="256,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="72.19361328125,25.8292682926829,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Match Output]"
          TopLeft="621,315">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-280.75,55.25"
              Start="0,0"
              End="-280.75,47.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.8658536585366" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.8658536585366"
                    Point2="0,18.8658536585366"
                    Point3="-4,18.8658536585366" />
                  <mssgle:LineSegment
                    End="-276.75,18.8658536585366" />
                  <mssgle:CubicBezierSegment
                    Point1="-276.75,18.8658536585366"
                    Point2="-280.75,18.8658536585366"
                    Point3="-280.75,22.8658536585366" />
                  <mssgle:LineSegment
                    End="-280.75,47.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-188.56638671875,23.8658536585366,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Lookup Error Output]"
          TopLeft="675.875,315">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.75"
              Start="0,0"
              End="0,53.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-45.86638671875,20.8203125,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Flat File Source Output]"
          TopLeft="972,52">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Output]"
          TopLeft="934.333333333333,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.1666666666666,45"
              Start="0,0"
              End="45.1666666666666,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.1723862729449" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.1723862729449"
                    Point2="0,18.1723862729449"
                    Point3="4,18.1723862729449" />
                  <mssgle:LineSegment
                    End="41.1666666666666,18.1723862729449" />
                  <mssgle:CubicBezierSegment
                    Point1="41.1666666666666,18.1723862729449"
                    Point2="45.1666666666666,18.1723862729449"
                    Point3="45.1666666666666,22.1723862729449" />
                  <mssgle:LineSegment
                    End="45.1666666666666,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Derived Column Error Output]"
          TopLeft="1014.66666666667,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="511.333333333333,47"
              Start="0,0"
              End="511.333333333333,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.9800478850758" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.9800478850758"
                    Point2="0,18.9800478850758"
                    Point3="4,18.9800478850758" />
                  <mssgle:LineSegment
                    End="507.333333333333,18.9800478850758" />
                  <mssgle:CubicBezierSegment
                    Point1="507.333333333333,18.9800478850758"
                    Point2="511.333333333333,18.9800478850758"
                    Point3="511.333333333333,22.9800478850758" />
                  <mssgle:LineSegment
                    End="511.333333333333,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="190.705279947917,23.9800478850758,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process Main Excel File.Paths[Data Conversion Output]"
          TopLeft="153.125,505.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.2500000000001"
              Start="0,0"
              End="0,37.7500000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.7500000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,10.875,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Insert into ExperianMigration">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Process Main Excel File\Lookup DealOwner with SSN">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[stg].[vwDealOwnerSSN]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>